--- a/net/minecraft/server/BlockCactus.java
+++ b/net/minecraft/server/BlockCactus.java
@@ -3,13 +3,15 @@
 import java.util.Iterator;
 import java.util.Random;
 
+import org.bukkit.craftbukkit.event.CraftEventFactory; // CraftBukkit
+
 public class BlockCactus extends Block {
 
     public static final BlockStateInteger AGE = BlockStateInteger.of("age", 0, 15);
 
     protected BlockCactus() {
         super(Material.CACTUS);
-        this.j(this.blockStateList.getBlockData().set(BlockCactus.AGE, 0));
+        this.j(this.blockStateList.getBlockData().set(BlockCactus.AGE, Integer.valueOf(0)));
         this.a(true);
         this.a(CreativeModeTab.c);
     }
@@ -24,17 +26,18 @@
                 ;
             }
 
-            if (i < 3) {
-                int j = (Integer) iblockdata.get(BlockCactus.AGE);
+            if (i < world.paperSpigotConfig.cactusMaxHeight) { // PaperSpigot - Configurable max growth height for cactus blocks) {
+                int j = ((Integer) iblockdata.get(BlockCactus.AGE)).intValue();
 
-                if (j == 15) {
-                    world.setTypeUpdate(blockposition1, this.getBlockData());
-                    IBlockData iblockdata1 = iblockdata.set(BlockCactus.AGE, 0);
+                if (j >= (byte) range(3, (world.growthOdds / world.spigotConfig.cactusModifier * 15) + 0.5F, 15)) { // Spigot
+                    // world.setTypeUpdate(blockposition1, this.getBlockData()); // CraftBukkit
+                    IBlockData iblockdata1 = iblockdata.set(BlockCactus.AGE, Integer.valueOf(0));
 
+                    CraftEventFactory.handleBlockGrowEvent(world, blockposition1.getX(), blockposition1.getY(), blockposition1.getZ(), this, 0); // CraftBukkit
                     world.setTypeAndData(blockposition, iblockdata1, 4);
                     this.doPhysics(world, blockposition1, iblockdata1, this);
                 } else {
-                    world.setTypeAndData(blockposition, iblockdata.set(BlockCactus.AGE, j + 1), 4);
+                    world.setTypeAndData(blockposition, iblockdata.set(BlockCactus.AGE, Integer.valueOf(j + 1)), 4);
                 }
 
             }
@@ -83,18 +86,20 @@
     }
 
     public void a(World world, BlockPosition blockposition, IBlockData iblockdata, Entity entity) {
+        CraftEventFactory.blockDamage = world.getWorld().getBlockAt(blockposition.getX(), blockposition.getY(), blockposition.getZ()); // CraftBukkit
         entity.damageEntity(DamageSource.CACTUS, 1.0F);
+        CraftEventFactory.blockDamage = null; // CraftBukkit
     }
 
     public IBlockData fromLegacyData(int i) {
-        return this.getBlockData().set(BlockCactus.AGE, i);
+        return this.getBlockData().set(BlockCactus.AGE, Integer.valueOf(i));
     }
 
     public int toLegacyData(IBlockData iblockdata) {
-        return (Integer) iblockdata.get(BlockCactus.AGE);
+        return ((Integer) iblockdata.get(BlockCactus.AGE)).intValue();
     }
 
     protected BlockStateList getStateList() {
-        return new BlockStateList(this, new IBlockState[]{BlockCactus.AGE});
+        return new BlockStateList(this, new IBlockState[] { BlockCactus.AGE});
     }
 }
