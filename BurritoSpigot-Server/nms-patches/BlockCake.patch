--- a/net/minecraft/server/BlockCake.java
+++ b/net/minecraft/server/BlockCake.java
@@ -8,13 +8,13 @@
 
     protected BlockCake() {
         super(Material.CAKE);
-        this.j(this.blockStateList.getBlockData().set(BlockCake.BITES, 0));
+        this.j(this.blockStateList.getBlockData().set(BlockCake.BITES, Integer.valueOf(0)));
         this.a(true);
     }
 
     public void updateShape(IBlockAccess iblockaccess, BlockPosition blockposition) {
         float f = 0.0625F;
-        float f1 = (float) (1 + (Integer) iblockaccess.getType(blockposition).get(BlockCake.BITES) * 2) / 16.0F;
+        float f1 = (float) (1 + ((Integer) iblockaccess.getType(blockposition).get(BlockCake.BITES)).intValue() * 2) / 16.0F;
         float f2 = 0.5F;
 
         this.a(f1, 0.0F, f, 1.0F - f, f2, 1.0F - f);
@@ -29,7 +29,7 @@
 
     public AxisAlignedBB a(World world, BlockPosition blockposition, IBlockData iblockdata) {
         float f = 0.0625F;
-        float f1 = (float) (1 + (Integer) iblockdata.get(BlockCake.BITES) * 2) / 16.0F;
+        float f1 = (float) (1 + ((Integer) iblockdata.get(BlockCake.BITES)).intValue() * 2) / 16.0F;
         float f2 = 0.5F;
 
         return new AxisAlignedBB((double) ((float) blockposition.getX() + f1), (double) blockposition.getY(), (double) ((float) blockposition.getZ() + f), (double) ((float) (blockposition.getX() + 1) - f), (double) ((float) blockposition.getY() + f2), (double) ((float) (blockposition.getZ() + 1) - f));
@@ -55,11 +55,22 @@
     private void b(World world, BlockPosition blockposition, IBlockData iblockdata, EntityHuman entityhuman) {
         if (entityhuman.j(false)) {
             entityhuman.b(StatisticList.H);
-            entityhuman.getFoodData().eat(2, 0.1F);
-            int i = (Integer) iblockdata.get(BlockCake.BITES);
+            // CraftBukkit start
+            // entityhuman.getFoodData().eat(2, 0.1F);
+            int oldFoodLevel = entityhuman.getFoodData().foodLevel;
+
+            org.bukkit.event.entity.FoodLevelChangeEvent event = org.bukkit.craftbukkit.event.CraftEventFactory.callFoodLevelChangeEvent(entityhuman, 2 + oldFoodLevel);
+
+            if (!event.isCancelled()) {
+                entityhuman.getFoodData().eat(event.getFoodLevel() - oldFoodLevel, 0.1F);
+            }
+
+            ((EntityPlayer) entityhuman).playerConnection.sendPacket(new PacketPlayOutUpdateHealth(((EntityPlayer) entityhuman).getBukkitEntity().getScaledHealth(), entityhuman.getFoodData().foodLevel, entityhuman.getFoodData().saturationLevel));
+            // CraftBukkit end
+            int i = ((Integer) iblockdata.get(BlockCake.BITES)).intValue();
 
             if (i < 6) {
-                world.setTypeAndData(blockposition, iblockdata.set(BlockCake.BITES, i + 1), 3);
+                world.setTypeAndData(blockposition, iblockdata.set(BlockCake.BITES, Integer.valueOf(i + 1)), 3);
             } else {
                 world.setAir(blockposition);
             }
@@ -91,19 +102,19 @@
     }
 
     public IBlockData fromLegacyData(int i) {
-        return this.getBlockData().set(BlockCake.BITES, i);
+        return this.getBlockData().set(BlockCake.BITES, Integer.valueOf(i));
     }
 
     public int toLegacyData(IBlockData iblockdata) {
-        return (Integer) iblockdata.get(BlockCake.BITES);
+        return ((Integer) iblockdata.get(BlockCake.BITES)).intValue();
     }
 
     protected BlockStateList getStateList() {
-        return new BlockStateList(this, new IBlockState[]{BlockCake.BITES});
+        return new BlockStateList(this, new IBlockState[] { BlockCake.BITES});
     }
 
     public int l(World world, BlockPosition blockposition) {
-        return (7 - (Integer) world.getType(blockposition).get(BlockCake.BITES)) * 2;
+        return (7 - ((Integer) world.getType(blockposition).get(BlockCake.BITES)).intValue()) * 2;
     }
 
     public boolean isComplexRedstone() {
