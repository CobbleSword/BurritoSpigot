--- a/net/minecraft/server/BlockCommand.java
+++ b/net/minecraft/server/BlockCommand.java
@@ -2,13 +2,15 @@
 
 import java.util.Random;
 
+import org.bukkit.event.block.BlockRedstoneEvent; // CraftBukkit
+
 public class BlockCommand extends BlockContainer {
 
     public static final BlockStateBoolean TRIGGERED = BlockStateBoolean.of("triggered");
 
     public BlockCommand() {
         super(Material.ORE, MaterialMapColor.q);
-        this.j(this.blockStateList.getBlockData().set(BlockCommand.TRIGGERED, false));
+        this.j(this.blockStateList.getBlockData().set(BlockCommand.TRIGGERED, Boolean.valueOf(false)));
     }
 
     public TileEntity a(World world, int i) {
@@ -18,13 +20,22 @@
     public void doPhysics(World world, BlockPosition blockposition, IBlockData iblockdata, Block block) {
         if (!world.isClientSide) {
             boolean flag = world.isBlockIndirectlyPowered(blockposition);
-            boolean flag1 = (Boolean) iblockdata.get(BlockCommand.TRIGGERED);
+            boolean flag1 = ((Boolean) iblockdata.get(BlockCommand.TRIGGERED)).booleanValue();
+
+            // CraftBukkit start
+            org.bukkit.block.Block bukkitBlock = world.getWorld().getBlockAt(blockposition.getX(), blockposition.getY(), blockposition.getZ());
+            int old = flag1 ? 15 : 0;
+            int current = flag ? 15 : 0;
+
+            BlockRedstoneEvent eventRedstone = new BlockRedstoneEvent(bukkitBlock, old, current);
+            world.getServer().getPluginManager().callEvent(eventRedstone);
+            // CraftBukkit end
 
-            if (flag && !flag1) {
-                world.setTypeAndData(blockposition, iblockdata.set(BlockCommand.TRIGGERED, true), 4);
+            if (eventRedstone.getNewCurrent() > 0 && !(eventRedstone.getOldCurrent() > 0)) { // CraftBukkit
+                world.setTypeAndData(blockposition, iblockdata.set(BlockCommand.TRIGGERED, Boolean.valueOf(true)), 4);
                 world.a(blockposition, (Block) this, this.a(world));
-            } else if (!flag && flag1) {
-                world.setTypeAndData(blockposition, iblockdata.set(BlockCommand.TRIGGERED, false), 4);
+            } else if (!(eventRedstone.getNewCurrent() > 0) && eventRedstone.getOldCurrent() > 0) { // CraftBukkit
+                world.setTypeAndData(blockposition, iblockdata.set(BlockCommand.TRIGGERED, Boolean.valueOf(false)), 4);
             }
         }
 
@@ -86,13 +97,13 @@
     }
 
     public IBlockData fromLegacyData(int i) {
-        return this.getBlockData().set(BlockCommand.TRIGGERED, (i & 1) > 0);
+        return this.getBlockData().set(BlockCommand.TRIGGERED, Boolean.valueOf((i & 1) > 0));
     }
 
     public int toLegacyData(IBlockData iblockdata) {
         int i = 0;
 
-        if ((Boolean) iblockdata.get(BlockCommand.TRIGGERED)) {
+        if (((Boolean) iblockdata.get(BlockCommand.TRIGGERED)).booleanValue()) {
             i |= 1;
         }
 
@@ -100,10 +111,10 @@
     }
 
     protected BlockStateList getStateList() {
-        return new BlockStateList(this, new IBlockState[]{BlockCommand.TRIGGERED});
+        return new BlockStateList(this, new IBlockState[] { BlockCommand.TRIGGERED});
     }
 
     public IBlockData getPlacedState(World world, BlockPosition blockposition, EnumDirection enumdirection, float f, float f1, float f2, int i, EntityLiving entityliving) {
-        return this.getBlockData().set(BlockCommand.TRIGGERED, false);
+        return this.getBlockData().set(BlockCommand.TRIGGERED, Boolean.valueOf(false));
     }
 }
