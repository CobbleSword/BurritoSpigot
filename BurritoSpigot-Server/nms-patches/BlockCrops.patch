--- a/net/minecraft/server/BlockCrops.java
+++ b/net/minecraft/server/BlockCrops.java
@@ -2,12 +2,14 @@
 
 import java.util.Random;
 
+import org.bukkit.craftbukkit.event.CraftEventFactory; // CraftBukkit
+
 public class BlockCrops extends BlockPlant implements IBlockFragilePlantElement {
 
     public static final BlockStateInteger AGE = BlockStateInteger.of("age", 0, 7);
 
     protected BlockCrops() {
-        this.j(this.blockStateList.getBlockData().set(BlockCrops.AGE, 0));
+        this.j(this.blockStateList.getBlockData().set(BlockCrops.AGE, Integer.valueOf(0)));
         this.a(true);
         float f = 0.5F;
 
@@ -25,13 +27,15 @@
     public void b(World world, BlockPosition blockposition, IBlockData iblockdata, Random random) {
         super.b(world, blockposition, iblockdata, random);
         if (world.getLightLevel(blockposition.up()) >= 9) {
-            int i = (Integer) iblockdata.get(BlockCrops.AGE);
+            int i = ((Integer) iblockdata.get(BlockCrops.AGE)).intValue();
 
             if (i < 7) {
                 float f = a((Block) this, world, blockposition);
 
-                if (random.nextInt((int) (25.0F / f) + 1) == 0) {
-                    world.setTypeAndData(blockposition, iblockdata.set(BlockCrops.AGE, i + 1), 2);
+                if (random.nextInt((int) (world.growthOdds / world.spigotConfig.wheatModifier * (25.0F / f)) + 1) == 0) { // Spigot                    // CraftBukkit start
+                    IBlockData data = iblockdata.set(AGE, Integer.valueOf(i + 1));
+                    CraftEventFactory.handleBlockGrowEvent(world, blockposition.getX(), blockposition.getY(), blockposition.getZ(), this, toLegacyData(data));
+                    // CraftBukkit end
                 }
             }
         }
@@ -39,13 +43,16 @@
     }
 
     public void g(World world, BlockPosition blockposition, IBlockData iblockdata) {
-        int i = (Integer) iblockdata.get(BlockCrops.AGE) + MathHelper.nextInt(world.random, 2, 5);
+        int i = ((Integer) iblockdata.get(BlockCrops.AGE)).intValue() + MathHelper.nextInt(world.random, 2, 5);
 
         if (i > 7) {
             i = 7;
         }
 
-        world.setTypeAndData(blockposition, iblockdata.set(BlockCrops.AGE, i), 2);
+        // CraftBukkit start
+        IBlockData data = iblockdata.set(AGE, Integer.valueOf(i));
+        CraftEventFactory.handleBlockGrowEvent(world, blockposition.getX(), blockposition.getY(), blockposition.getZ(), this, toLegacyData(data));
+        // CraftBukkit end
     }
 
     protected static float a(Block block, World world, BlockPosition blockposition) {
@@ -59,7 +66,7 @@
 
                 if (iblockdata.getBlock() == Blocks.FARMLAND) {
                     f1 = 1.0F;
-                    if ((Integer) iblockdata.get(BlockSoil.MOISTURE) > 0) {
+                    if (((Integer) iblockdata.get(BlockSoil.MOISTURE)).intValue() > 0) {
                         f1 = 3.0F;
                     }
                 }
@@ -107,7 +114,7 @@
     public void dropNaturally(World world, BlockPosition blockposition, IBlockData iblockdata, float f, int i) {
         super.dropNaturally(world, blockposition, iblockdata, f, 0);
         if (!world.isClientSide) {
-            int j = (Integer) iblockdata.get(BlockCrops.AGE);
+            int j = ((Integer) iblockdata.get(BlockCrops.AGE)).intValue();
 
             if (j >= 7) {
                 int k = 3 + i;
@@ -123,11 +130,11 @@
     }
 
     public Item getDropType(IBlockData iblockdata, Random random, int i) {
-        return (Integer) iblockdata.get(BlockCrops.AGE) == 7 ? this.n() : this.l();
+        return ((Integer) iblockdata.get(BlockCrops.AGE)).intValue() == 7 ? this.n() : this.l();
     }
 
     public boolean a(World world, BlockPosition blockposition, IBlockData iblockdata, boolean flag) {
-        return (Integer) iblockdata.get(BlockCrops.AGE) < 7;
+        return ((Integer) iblockdata.get(BlockCrops.AGE)).intValue() < 7;
     }
 
     public boolean a(World world, Random random, BlockPosition blockposition, IBlockData iblockdata) {
@@ -139,14 +146,14 @@
     }
 
     public IBlockData fromLegacyData(int i) {
-        return this.getBlockData().set(BlockCrops.AGE, i);
+        return this.getBlockData().set(BlockCrops.AGE, Integer.valueOf(i));
     }
 
     public int toLegacyData(IBlockData iblockdata) {
-        return (Integer) iblockdata.get(BlockCrops.AGE);
+        return ((Integer) iblockdata.get(BlockCrops.AGE)).intValue();
     }
 
     protected BlockStateList getStateList() {
-        return new BlockStateList(this, new IBlockState[]{BlockCrops.AGE});
+        return new BlockStateList(this, new IBlockState[] { BlockCrops.AGE});
     }
 }
