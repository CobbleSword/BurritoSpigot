--- a/net/minecraft/server/BlockGrass.java
+++ b/net/minecraft/server/BlockGrass.java
@@ -2,13 +2,21 @@
 
 import java.util.Random;
 
+// CraftBukkit start
+import org.bukkit.block.BlockState;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.craftbukkit.util.CraftMagicNumbers;
+import org.bukkit.event.block.BlockSpreadEvent;
+import org.bukkit.event.block.BlockFadeEvent;
+// CraftBukkit end
+
 public class BlockGrass extends Block implements IBlockFragilePlantElement {
 
     public static final BlockStateBoolean SNOWY = BlockStateBoolean.of("snowy");
 
     protected BlockGrass() {
         super(Material.GRASS);
-        this.j(this.blockStateList.getBlockData().set(BlockGrass.SNOWY, false));
+        this.j(this.blockStateList.getBlockData().set(BlockGrass.SNOWY, Boolean.valueOf(false)));
         this.a(true);
         this.a(CreativeModeTab.b);
     }
@@ -16,22 +24,46 @@
     public IBlockData updateState(IBlockData iblockdata, IBlockAccess iblockaccess, BlockPosition blockposition) {
         Block block = iblockaccess.getType(blockposition.up()).getBlock();
 
-        return iblockdata.set(BlockGrass.SNOWY, block == Blocks.SNOW || block == Blocks.SNOW_LAYER);
+        return iblockdata.set(BlockGrass.SNOWY, Boolean.valueOf(block == Blocks.SNOW || block == Blocks.SNOW_LAYER));
     }
 
     public void b(World world, BlockPosition blockposition, IBlockData iblockdata, Random random) {
         if (!world.isClientSide) {
             if (world.getLightLevel(blockposition.up()) < 4 && world.getType(blockposition.up()).getBlock().p() > 2) {
-                world.setTypeUpdate(blockposition, Blocks.DIRT.getBlockData());
+                // CraftBukkit start
+                // world.setTypeUpdate(blockposition, Blocks.DIRT.getBlockData());
+                org.bukkit.World bworld = world.getWorld();
+                BlockState blockState = bworld.getBlockAt(blockposition.getX(), blockposition.getY(), blockposition.getZ()).getState();
+                blockState.setType(CraftMagicNumbers.getMaterial(Blocks.DIRT));
+
+                BlockFadeEvent event = new BlockFadeEvent(blockState.getBlock(), blockState);
+                world.getServer().getPluginManager().callEvent(event);
+
+                if (!event.isCancelled()) {
+                    blockState.update(true);
+                }
+                // CraftBukkit end
             } else {
-                if (world.getLightLevel(blockposition.up()) >= 9) {
-                    for (int i = 0; i < 4; ++i) {
+                if (world.tacoSpigotConfig.grassIgnoresLight || world.getLightLevel(blockposition.up()) >= 9) { // TacoSpigot - add an option to ignore light
+                    for (int i = 0; i < Math.min(4, Math.max(20, (int) (4 * 100F / world.growthOdds))); ++i) { // Spigot
                         BlockPosition blockposition1 = blockposition.a(random.nextInt(3) - 1, random.nextInt(5) - 3, random.nextInt(3) - 1);
                         Block block = world.getType(blockposition1.up()).getBlock();
                         IBlockData iblockdata1 = world.getType(blockposition1);
 
                         if (iblockdata1.getBlock() == Blocks.DIRT && iblockdata1.get(BlockDirt.VARIANT) == BlockDirt.EnumDirtVariant.DIRT && world.getLightLevel(blockposition1.up()) >= 4 && block.p() <= 2) {
-                            world.setTypeUpdate(blockposition1, Blocks.GRASS.getBlockData());
+                            // CraftBukkit start
+                            // world.setTypeUpdate(blockposition1, Blocks.GRASS.getBlockData());
+                            org.bukkit.World bworld = world.getWorld();
+                            BlockState blockState = bworld.getBlockAt(blockposition1.getX(), blockposition1.getY(), blockposition1.getZ()).getState();
+                            blockState.setType(CraftMagicNumbers.getMaterial(Blocks.GRASS));
+
+                            BlockSpreadEvent event = new BlockSpreadEvent(blockState.getBlock(), bworld.getBlockAt(blockposition.getX(), blockposition.getY(), blockposition.getZ()), blockState);
+                            world.getServer().getPluginManager().callEvent(event);
+
+                            if (!event.isCancelled()) {
+                                blockState.update(true);
+                            }
+                            // CraftBukkit end
                         }
                     }
                 }
@@ -74,13 +106,15 @@
                         IBlockData iblockdata1 = blockflowers.getBlockData().set(blockflowers.n(), blockflowers_enumflowervarient);
 
                         if (blockflowers.f(world, blockposition2, iblockdata1)) {
-                            world.setTypeAndData(blockposition2, iblockdata1, 3);
+                            // world.setTypeAndData(blockposition2, iblockdata1, 3); // CraftBukkit
+                            CraftEventFactory.handleBlockGrowEvent(world, blockposition2.getX(), blockposition2.getY(), blockposition2.getZ(), iblockdata1.getBlock(), iblockdata1.getBlock().toLegacyData(iblockdata1)); // CraftBukkit
                         }
                     } else {
                         IBlockData iblockdata2 = Blocks.TALLGRASS.getBlockData().set(BlockLongGrass.TYPE, BlockLongGrass.EnumTallGrassType.GRASS);
 
                         if (Blocks.TALLGRASS.f(world, blockposition2, iblockdata2)) {
-                            world.setTypeAndData(blockposition2, iblockdata2, 3);
+                            // world.setTypeAndData(blockposition2, iblockdata2, 3); // CraftBukkit
+                            CraftEventFactory.handleBlockGrowEvent(world, blockposition2.getX(), blockposition2.getY(), blockposition2.getZ(), iblockdata2.getBlock(), iblockdata2.getBlock().toLegacyData(iblockdata2)); // CraftBukkit
                         }
                     }
                 }
@@ -97,6 +131,6 @@
     }
 
     protected BlockStateList getStateList() {
-        return new BlockStateList(this, new IBlockState[]{BlockGrass.SNOWY});
+        return new BlockStateList(this, new IBlockState[] { BlockGrass.SNOWY});
     }
 }
