--- a/net/minecraft/server/BlockTrapdoor.java
+++ b/net/minecraft/server/BlockTrapdoor.java
@@ -2,6 +2,8 @@
 
 import com.google.common.base.Predicate;
 
+import org.bukkit.event.block.BlockRedstoneEvent; // CraftBukkit
+
 public class BlockTrapdoor extends Block {
 
     public static final BlockStateDirection FACING = BlockStateDirection.of("facing", (Predicate) EnumDirection.EnumDirectionLimit.HORIZONTAL);
@@ -10,7 +12,7 @@
 
     protected BlockTrapdoor(Material material) {
         super(material);
-        this.j(this.blockStateList.getBlockData().set(BlockTrapdoor.FACING, EnumDirection.NORTH).set(BlockTrapdoor.OPEN, false).set(BlockTrapdoor.HALF, BlockTrapdoor.EnumTrapdoorHalf.BOTTOM));
+        this.j(this.blockStateList.getBlockData().set(BlockTrapdoor.FACING, EnumDirection.NORTH).set(BlockTrapdoor.OPEN, Boolean.valueOf(false)).set(BlockTrapdoor.HALF, BlockTrapdoor.EnumTrapdoorHalf.BOTTOM));
         float f = 0.5F;
         float f1 = 1.0F;
 
@@ -27,7 +29,7 @@
     }
 
     public boolean b(IBlockAccess iblockaccess, BlockPosition blockposition) {
-        return !(Boolean) iblockaccess.getType(blockposition).get(BlockTrapdoor.OPEN);
+        return !((Boolean) iblockaccess.getType(blockposition).get(BlockTrapdoor.OPEN)).booleanValue();
     }
 
     public AxisAlignedBB a(World world, BlockPosition blockposition, IBlockData iblockdata) {
@@ -58,7 +60,7 @@
                 this.a(0.0F, 0.0F, 0.0F, 1.0F, 0.1875F, 1.0F);
             }
 
-            if (obool) {
+            if (obool.booleanValue()) {
                 if (enumdirection == EnumDirection.NORTH) {
                     this.a(0.0F, 0.0F, 0.8125F, 1.0F, 1.0F, 1.0F);
                 }
@@ -85,7 +87,7 @@
         } else {
             iblockdata = iblockdata.a(BlockTrapdoor.OPEN);
             world.setTypeAndData(blockposition, iblockdata, 2);
-            world.a(entityhuman, (Boolean) iblockdata.get(BlockTrapdoor.OPEN) ? 1003 : 1006, blockposition, 0);
+            world.a(entityhuman, ((Boolean) iblockdata.get(BlockTrapdoor.OPEN)).booleanValue() ? 1003 : 1006, blockposition, 0);
             return true;
         }
     }
@@ -101,10 +103,23 @@
                 boolean flag = world.isBlockIndirectlyPowered(blockposition);
 
                 if (flag || block.isPowerSource()) {
-                    boolean flag1 = (Boolean) iblockdata.get(BlockTrapdoor.OPEN);
+                    // CraftBukkit start
+                    org.bukkit.World bworld = world.getWorld();
+                    org.bukkit.block.Block bblock = bworld.getBlockAt(blockposition.getX(), blockposition.getY(), blockposition.getZ());
+
+                    int power = bblock.getBlockPower();
+                    int oldPower = (Boolean) iblockdata.get(OPEN) ? 15 : 0;
+
+                    if (oldPower == 0 ^ power == 0 || block.isPowerSource()) {
+                        BlockRedstoneEvent eventRedstone = new BlockRedstoneEvent(bblock, oldPower, power);
+                        world.getServer().getPluginManager().callEvent(eventRedstone);
+                        flag = eventRedstone.getNewCurrent() > 0;
+                    }
+                    // CraftBukkit end
+                    boolean flag1 = ((Boolean) iblockdata.get(BlockTrapdoor.OPEN)).booleanValue();
 
                     if (flag1 != flag) {
-                        world.setTypeAndData(blockposition, iblockdata.set(BlockTrapdoor.OPEN, flag), 2);
+                        world.setTypeAndData(blockposition, iblockdata.set(BlockTrapdoor.OPEN, Boolean.valueOf(flag)), 2);
                         world.a((EntityHuman) null, flag ? 1003 : 1006, blockposition, 0);
                     }
                 }
@@ -122,7 +137,7 @@
         IBlockData iblockdata = this.getBlockData();
 
         if (enumdirection.k().c()) {
-            iblockdata = iblockdata.set(BlockTrapdoor.FACING, enumdirection).set(BlockTrapdoor.OPEN, false);
+            iblockdata = iblockdata.set(BlockTrapdoor.FACING, enumdirection).set(BlockTrapdoor.OPEN, Boolean.valueOf(false));
             iblockdata = iblockdata.set(BlockTrapdoor.HALF, f1 > 0.5F ? BlockTrapdoor.EnumTrapdoorHalf.TOP : BlockTrapdoor.EnumTrapdoorHalf.BOTTOM);
         }
 
@@ -135,29 +150,35 @@
 
     protected static EnumDirection b(int i) {
         switch (i & 3) {
-            case 0:
-                return EnumDirection.NORTH;
-            case 1:
-                return EnumDirection.SOUTH;
-            case 2:
-                return EnumDirection.WEST;
-            case 3:
-            default:
-                return EnumDirection.EAST;
+        case 0:
+            return EnumDirection.NORTH;
+
+        case 1:
+            return EnumDirection.SOUTH;
+
+        case 2:
+            return EnumDirection.WEST;
+
+        case 3:
+        default:
+            return EnumDirection.EAST;
         }
     }
 
     protected static int a(EnumDirection enumdirection) {
-        switch (enumdirection) {
-            case NORTH:
-                return 0;
-            case SOUTH:
-                return 1;
-            case WEST:
-                return 2;
-            case EAST:
-            default:
-                return 3;
+        switch (BlockTrapdoor.SyntheticClass_1.a[enumdirection.ordinal()]) {
+        case 1:
+            return 0;
+
+        case 2:
+            return 1;
+
+        case 3:
+            return 2;
+
+        case 4:
+        default:
+            return 3;
         }
     }
 
@@ -166,14 +187,14 @@
     }
 
     public IBlockData fromLegacyData(int i) {
-        return this.getBlockData().set(BlockTrapdoor.FACING, b(i)).set(BlockTrapdoor.OPEN, (i & 4) != 0).set(BlockTrapdoor.HALF, (i & 8) == 0 ? BlockTrapdoor.EnumTrapdoorHalf.BOTTOM : BlockTrapdoor.EnumTrapdoorHalf.TOP);
+        return this.getBlockData().set(BlockTrapdoor.FACING, b(i)).set(BlockTrapdoor.OPEN, Boolean.valueOf((i & 4) != 0)).set(BlockTrapdoor.HALF, (i & 8) == 0 ? BlockTrapdoor.EnumTrapdoorHalf.BOTTOM : BlockTrapdoor.EnumTrapdoorHalf.TOP);
     }
 
     public int toLegacyData(IBlockData iblockdata) {
         byte b0 = 0;
         int i = b0 | a((EnumDirection) iblockdata.get(BlockTrapdoor.FACING));
 
-        if ((Boolean) iblockdata.get(BlockTrapdoor.OPEN)) {
+        if (((Boolean) iblockdata.get(BlockTrapdoor.OPEN)).booleanValue()) {
             i |= 4;
         }
 
@@ -185,7 +206,39 @@
     }
 
     protected BlockStateList getStateList() {
-        return new BlockStateList(this, new IBlockState[]{BlockTrapdoor.FACING, BlockTrapdoor.OPEN, BlockTrapdoor.HALF});
+        return new BlockStateList(this, new IBlockState[] { BlockTrapdoor.FACING, BlockTrapdoor.OPEN, BlockTrapdoor.HALF});
+    }
+
+    static class SyntheticClass_1 {
+
+        static final int[] a = new int[EnumDirection.values().length];
+
+        static {
+            try {
+                BlockTrapdoor.SyntheticClass_1.a[EnumDirection.NORTH.ordinal()] = 1;
+            } catch (NoSuchFieldError nosuchfielderror) {
+                ;
+            }
+
+            try {
+                BlockTrapdoor.SyntheticClass_1.a[EnumDirection.SOUTH.ordinal()] = 2;
+            } catch (NoSuchFieldError nosuchfielderror1) {
+                ;
+            }
+
+            try {
+                BlockTrapdoor.SyntheticClass_1.a[EnumDirection.WEST.ordinal()] = 3;
+            } catch (NoSuchFieldError nosuchfielderror2) {
+                ;
+            }
+
+            try {
+                BlockTrapdoor.SyntheticClass_1.a[EnumDirection.EAST.ordinal()] = 4;
+            } catch (NoSuchFieldError nosuchfielderror3) {
+                ;
+            }
+
+        }
     }
 
     public static enum EnumTrapdoorHalf implements INamable {
