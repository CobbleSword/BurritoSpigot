--- a/net/minecraft/server/BlockVine.java
+++ b/net/minecraft/server/BlockVine.java
@@ -3,6 +3,8 @@
 import java.util.Iterator;
 import java.util.Random;
 
+import org.bukkit.craftbukkit.event.CraftEventFactory; // CraftBukkit
+
 public class BlockVine extends Block {
 
     public static final BlockStateBoolean UP = BlockStateBoolean.of("up");
@@ -10,17 +12,17 @@
     public static final BlockStateBoolean EAST = BlockStateBoolean.of("east");
     public static final BlockStateBoolean SOUTH = BlockStateBoolean.of("south");
     public static final BlockStateBoolean WEST = BlockStateBoolean.of("west");
-    public static final BlockStateBoolean[] Q = new BlockStateBoolean[]{BlockVine.UP, BlockVine.NORTH, BlockVine.SOUTH, BlockVine.WEST, BlockVine.EAST};
+    public static final BlockStateBoolean[] Q = new BlockStateBoolean[] { BlockVine.UP, BlockVine.NORTH, BlockVine.SOUTH, BlockVine.WEST, BlockVine.EAST};
 
     public BlockVine() {
         super(Material.REPLACEABLE_PLANT);
-        this.j(this.blockStateList.getBlockData().set(BlockVine.UP, false).set(BlockVine.NORTH, false).set(BlockVine.EAST, false).set(BlockVine.SOUTH, false).set(BlockVine.WEST, false));
+        this.j(this.blockStateList.getBlockData().set(BlockVine.UP, Boolean.valueOf(false)).set(BlockVine.NORTH, Boolean.valueOf(false)).set(BlockVine.EAST, Boolean.valueOf(false)).set(BlockVine.SOUTH, Boolean.valueOf(false)).set(BlockVine.WEST, Boolean.valueOf(false)));
         this.a(true);
         this.a(CreativeModeTab.c);
     }
 
     public IBlockData updateState(IBlockData iblockdata, IBlockAccess iblockaccess, BlockPosition blockposition) {
-        return iblockdata.set(BlockVine.UP, iblockaccess.getType(blockposition.up()).getBlock().u());
+        return iblockdata.set(BlockVine.UP, Boolean.valueOf(iblockaccess.getType(blockposition.up()).getBlock().u()));
     }
 
     public void j() {
@@ -49,7 +51,7 @@
         float f6 = 0.0F;
         boolean flag = false;
 
-        if ((Boolean) iblockaccess.getType(blockposition).get(BlockVine.WEST)) {
+        if (((Boolean) iblockaccess.getType(blockposition).get(BlockVine.WEST)).booleanValue()) {
             f4 = Math.max(f4, 0.0625F);
             f1 = 0.0F;
             f2 = 0.0F;
@@ -59,7 +61,7 @@
             flag = true;
         }
 
-        if ((Boolean) iblockaccess.getType(blockposition).get(BlockVine.EAST)) {
+        if (((Boolean) iblockaccess.getType(blockposition).get(BlockVine.EAST)).booleanValue()) {
             f1 = Math.min(f1, 0.9375F);
             f4 = 1.0F;
             f2 = 0.0F;
@@ -69,7 +71,7 @@
             flag = true;
         }
 
-        if ((Boolean) iblockaccess.getType(blockposition).get(BlockVine.NORTH)) {
+        if (((Boolean) iblockaccess.getType(blockposition).get(BlockVine.NORTH)).booleanValue()) {
             f6 = Math.max(f6, 0.0625F);
             f3 = 0.0F;
             f1 = 0.0F;
@@ -79,7 +81,7 @@
             flag = true;
         }
 
-        if ((Boolean) iblockaccess.getType(blockposition).get(BlockVine.SOUTH)) {
+        if (((Boolean) iblockaccess.getType(blockposition).get(BlockVine.SOUTH)).booleanValue()) {
             f3 = Math.min(f3, 0.9375F);
             f6 = 1.0F;
             f1 = 0.0F;
@@ -106,16 +108,18 @@
     }
 
     public boolean canPlace(World world, BlockPosition blockposition, EnumDirection enumdirection) {
-        switch (enumdirection) {
-            case UP:
-                return this.c(world.getType(blockposition.up()).getBlock());
-            case NORTH:
-            case SOUTH:
-            case EAST:
-            case WEST:
-                return this.c(world.getType(blockposition.shift(enumdirection.opposite())).getBlock());
-            default:
-                return false;
+        switch (BlockVine.SyntheticClass_1.a[enumdirection.ordinal()]) {
+        case 1:
+            return this.c(world.getType(blockposition.up()).getBlock());
+
+        case 2:
+        case 3:
+        case 4:
+        case 5:
+            return this.c(world.getType(blockposition.shift(enumdirection.opposite())).getBlock());
+
+        default:
+            return false;
         }
     }
 
@@ -131,11 +135,11 @@
             EnumDirection enumdirection = (EnumDirection) iterator.next();
             BlockStateBoolean blockstateboolean = getDirection(enumdirection);
 
-            if ((Boolean) iblockdata.get(blockstateboolean) && !this.c(world.getType(blockposition.shift(enumdirection)).getBlock())) {
+            if (((Boolean) iblockdata.get(blockstateboolean)).booleanValue() && !this.c(world.getType(blockposition.shift(enumdirection)).getBlock())) {
                 IBlockData iblockdata2 = world.getType(blockposition.up());
 
-                if (iblockdata2.getBlock() != this || !(Boolean) iblockdata2.get(blockstateboolean)) {
-                    iblockdata = iblockdata.set(blockstateboolean, false);
+                if (iblockdata2.getBlock() != this || !((Boolean) iblockdata2.get(blockstateboolean)).booleanValue()) {
+                    iblockdata = iblockdata.set(blockstateboolean, Boolean.valueOf(false));
                 }
             }
         }
@@ -193,19 +197,25 @@
                         while (iterator.hasNext()) {
                             enumdirection1 = (EnumDirection) iterator.next();
                             if (random.nextBoolean() || !this.c(world.getType(blockposition1.shift(enumdirection1)).getBlock())) {
-                                iblockdata1 = iblockdata1.set(getDirection(enumdirection1), false);
+                                iblockdata1 = iblockdata1.set(getDirection(enumdirection1), Boolean.valueOf(false));
                             }
                         }
 
-                        if ((Boolean) iblockdata1.get(BlockVine.NORTH) || (Boolean) iblockdata1.get(BlockVine.EAST) || (Boolean) iblockdata1.get(BlockVine.SOUTH) || (Boolean) iblockdata1.get(BlockVine.WEST)) {
-                            world.setTypeAndData(blockposition1, iblockdata1, 2);
+                        if (((Boolean) iblockdata1.get(BlockVine.NORTH)).booleanValue() || ((Boolean) iblockdata1.get(BlockVine.EAST)).booleanValue() || ((Boolean) iblockdata1.get(BlockVine.SOUTH)).booleanValue() || ((Boolean) iblockdata1.get(BlockVine.WEST)).booleanValue()) {
+                            // CraftBukkit start - Call BlockSpreadEvent
+                            // world.setTypeAndData(blockposition1, iblockdata1, 2);
+                            BlockPosition target = blockposition1;
+                            org.bukkit.block.Block source = world.getWorld().getBlockAt(blockposition.getX(), blockposition.getY(), blockposition.getZ());
+                            org.bukkit.block.Block block = world.getWorld().getBlockAt(target.getX(), target.getY(), target.getZ());
+                            CraftEventFactory.handleBlockSpreadEvent(block, source, this, toLegacyData(iblockdata1));
+                            // CraftBukkit end
                         }
 
                     }
                 } else {
                     BlockPosition blockposition2;
 
-                    if (enumdirection.k().c() && !(Boolean) iblockdata.get(getDirection(enumdirection))) {
+                    if (enumdirection.k().c() && !((Boolean) iblockdata.get(getDirection(enumdirection))).booleanValue()) {
                         if (!flag) {
                             blockposition2 = blockposition.shift(enumdirection);
                             Block block = world.getType(blockposition2).getBlock();
@@ -213,24 +223,36 @@
                             if (block.material == Material.AIR) {
                                 enumdirection1 = enumdirection.e();
                                 EnumDirection enumdirection2 = enumdirection.f();
-                                boolean flag1 = (Boolean) iblockdata.get(getDirection(enumdirection1));
-                                boolean flag2 = (Boolean) iblockdata.get(getDirection(enumdirection2));
+                                boolean flag1 = ((Boolean) iblockdata.get(getDirection(enumdirection1))).booleanValue();
+                                boolean flag2 = ((Boolean) iblockdata.get(getDirection(enumdirection2))).booleanValue();
                                 BlockPosition blockposition3 = blockposition2.shift(enumdirection1);
                                 BlockPosition blockposition4 = blockposition2.shift(enumdirection2);
 
+                                // CraftBukkit start - Call BlockSpreadEvent
+                                org.bukkit.block.Block source = world.getWorld().getBlockAt(blockposition.getX(), blockposition.getY(), blockposition.getZ());
+                                org.bukkit.block.Block bukkitBlock = world.getWorld().getBlockAt(blockposition2.getX(), blockposition2.getY(), blockposition2.getZ());
+
                                 if (flag1 && this.c(world.getType(blockposition3).getBlock())) {
-                                    world.setTypeAndData(blockposition2, this.getBlockData().set(getDirection(enumdirection1), true), 2);
+                                    // world.setTypeAndData(blockposition2, this.getBlockData().set(a(enumdirection1), Boolean.valueOf(true)), 2);
+                                    CraftEventFactory.handleBlockSpreadEvent(bukkitBlock, source, this, toLegacyData(this.getBlockData().set(getDirection(enumdirection1), Boolean.valueOf(true))));
                                 } else if (flag2 && this.c(world.getType(blockposition4).getBlock())) {
-                                    world.setTypeAndData(blockposition2, this.getBlockData().set(getDirection(enumdirection2), true), 2);
+                                    // world.setTypeAndData(blockposition2, this.getBlockData().set(a(enumdirection2), Boolean.valueOf(true)), 2);
+                                    CraftEventFactory.handleBlockSpreadEvent(bukkitBlock, source, this, toLegacyData(this.getBlockData().set(getDirection(enumdirection2), Boolean.valueOf(true))));
                                 } else if (flag1 && world.isEmpty(blockposition3) && this.c(world.getType(blockposition.shift(enumdirection1)).getBlock())) {
-                                    world.setTypeAndData(blockposition3, this.getBlockData().set(getDirection(enumdirection.opposite()), true), 2);
+                                    // world.setTypeAndData(blockposition3, this.getBlockData().set(a(enumdirection.opposite()), Boolean.valueOf(true)), 2);
+                                    bukkitBlock = world.getWorld().getBlockAt(blockposition3.getX(), blockposition3.getY(), blockposition3.getZ());
+                                    CraftEventFactory.handleBlockSpreadEvent(bukkitBlock, source, this, toLegacyData(this.getBlockData().set(getDirection(enumdirection.opposite()), Boolean.valueOf(true))));
                                 } else if (flag2 && world.isEmpty(blockposition4) && this.c(world.getType(blockposition.shift(enumdirection2)).getBlock())) {
-                                    world.setTypeAndData(blockposition4, this.getBlockData().set(getDirection(enumdirection.opposite()), true), 2);
+                                    // world.setTypeAndData(blockposition4, this.getBlockData().set(a(enumdirection.opposite()), Boolean.valueOf(true)), 2);
+                                    bukkitBlock = world.getWorld().getBlockAt(blockposition4.getX(), blockposition4.getY(), blockposition4.getZ());
+                                    CraftEventFactory.handleBlockSpreadEvent(bukkitBlock, source, this, toLegacyData(this.getBlockData().set(getDirection(enumdirection.opposite()), Boolean.valueOf(true))));
                                 } else if (this.c(world.getType(blockposition2.up()).getBlock())) {
-                                    world.setTypeAndData(blockposition2, this.getBlockData(), 2);
+                                    // world.setTypeAndData(blockposition2, this.getBlockData(), 2);
+                                    CraftEventFactory.handleBlockSpreadEvent(bukkitBlock, source, this, toLegacyData(this.getBlockData()));
                                 }
+                                // CraftBukkit end
                             } else if (block.material.k() && block.d()) {
-                                world.setTypeAndData(blockposition, iblockdata.set(getDirection(enumdirection), true), 2);
+                                world.setTypeAndData(blockposition, iblockdata.set(getDirection(enumdirection), Boolean.valueOf(true)), 2);
                             }
 
                         }
@@ -250,12 +272,17 @@
                                 while (iterator1.hasNext()) {
                                     enumdirection3 = (EnumDirection) iterator1.next();
                                     if (random.nextBoolean()) {
-                                        iblockdata3 = iblockdata3.set(getDirection(enumdirection3), false);
+                                        iblockdata3 = iblockdata3.set(getDirection(enumdirection3), Boolean.valueOf(false));
                                     }
                                 }
 
-                                if ((Boolean) iblockdata3.get(BlockVine.NORTH) || (Boolean) iblockdata3.get(BlockVine.EAST) || (Boolean) iblockdata3.get(BlockVine.SOUTH) || (Boolean) iblockdata3.get(BlockVine.WEST)) {
-                                    world.setTypeAndData(blockposition2, iblockdata3, 2);
+                                if (((Boolean) iblockdata3.get(BlockVine.NORTH)).booleanValue() || ((Boolean) iblockdata3.get(BlockVine.EAST)).booleanValue() || ((Boolean) iblockdata3.get(BlockVine.SOUTH)).booleanValue() || ((Boolean) iblockdata3.get(BlockVine.WEST)).booleanValue()) {
+                                    // CraftBukkit start - Call BlockSpreadEvent
+                                    // world.setTypeAndData(blockposition2, iblockdata3, 2);
+                                    org.bukkit.block.Block source = world.getWorld().getBlockAt(blockposition.getX(), blockposition.getY(), blockposition.getZ());
+                                    org.bukkit.block.Block bukkitBlock = world.getWorld().getBlockAt(blockposition2.getX(), blockposition2.getY(), blockposition2.getZ());
+                                    CraftEventFactory.handleBlockSpreadEvent(bukkitBlock, source, this, toLegacyData(iblockdata3));
+                                    // CraftBukkit end
                                 }
                             } else if (block1 == this) {
                                 iblockdata3 = iblockdata2;
@@ -265,12 +292,12 @@
                                     enumdirection3 = (EnumDirection) iterator1.next();
                                     BlockStateBoolean blockstateboolean = getDirection(enumdirection3);
 
-                                    if (random.nextBoolean() && (Boolean) iblockdata.get(blockstateboolean)) {
-                                        iblockdata3 = iblockdata3.set(blockstateboolean, true);
+                                    if (random.nextBoolean() && ((Boolean) iblockdata.get(blockstateboolean)).booleanValue()) {
+                                        iblockdata3 = iblockdata3.set(blockstateboolean, Boolean.valueOf(true));
                                     }
                                 }
 
-                                if ((Boolean) iblockdata3.get(BlockVine.NORTH) || (Boolean) iblockdata3.get(BlockVine.EAST) || (Boolean) iblockdata3.get(BlockVine.SOUTH) || (Boolean) iblockdata3.get(BlockVine.WEST)) {
+                                if (((Boolean) iblockdata3.get(BlockVine.NORTH)).booleanValue() || ((Boolean) iblockdata3.get(BlockVine.EAST)).booleanValue() || ((Boolean) iblockdata3.get(BlockVine.SOUTH)).booleanValue() || ((Boolean) iblockdata3.get(BlockVine.WEST)).booleanValue()) {
                                     world.setTypeAndData(blockposition2, iblockdata3, 2);
                                 }
                             }
@@ -283,9 +310,9 @@
     }
 
     public IBlockData getPlacedState(World world, BlockPosition blockposition, EnumDirection enumdirection, float f, float f1, float f2, int i, EntityLiving entityliving) {
-        IBlockData iblockdata = this.getBlockData().set(BlockVine.UP, false).set(BlockVine.NORTH, false).set(BlockVine.EAST, false).set(BlockVine.SOUTH, false).set(BlockVine.WEST, false);
+        IBlockData iblockdata = this.getBlockData().set(BlockVine.UP, Boolean.valueOf(false)).set(BlockVine.NORTH, Boolean.valueOf(false)).set(BlockVine.EAST, Boolean.valueOf(false)).set(BlockVine.SOUTH, Boolean.valueOf(false)).set(BlockVine.WEST, Boolean.valueOf(false));
 
-        return enumdirection.k().c() ? iblockdata.set(getDirection(enumdirection.opposite()), true) : iblockdata;
+        return enumdirection.k().c() ? iblockdata.set(getDirection(enumdirection.opposite()), Boolean.valueOf(true)) : iblockdata;
     }
 
     public Item getDropType(IBlockData iblockdata, Random random, int i) {
@@ -307,25 +334,25 @@
     }
 
     public IBlockData fromLegacyData(int i) {
-        return this.getBlockData().set(BlockVine.SOUTH, (i & 1) > 0).set(BlockVine.WEST, (i & 2) > 0).set(BlockVine.NORTH, (i & 4) > 0).set(BlockVine.EAST, (i & 8) > 0);
+        return this.getBlockData().set(BlockVine.SOUTH, Boolean.valueOf((i & 1) > 0)).set(BlockVine.WEST, Boolean.valueOf((i & 2) > 0)).set(BlockVine.NORTH, Boolean.valueOf((i & 4) > 0)).set(BlockVine.EAST, Boolean.valueOf((i & 8) > 0));
     }
 
     public int toLegacyData(IBlockData iblockdata) {
         int i = 0;
 
-        if ((Boolean) iblockdata.get(BlockVine.SOUTH)) {
+        if (((Boolean) iblockdata.get(BlockVine.SOUTH)).booleanValue()) {
             i |= 1;
         }
 
-        if ((Boolean) iblockdata.get(BlockVine.WEST)) {
+        if (((Boolean) iblockdata.get(BlockVine.WEST)).booleanValue()) {
             i |= 2;
         }
 
-        if ((Boolean) iblockdata.get(BlockVine.NORTH)) {
+        if (((Boolean) iblockdata.get(BlockVine.NORTH)).booleanValue()) {
             i |= 4;
         }
 
-        if ((Boolean) iblockdata.get(BlockVine.EAST)) {
+        if (((Boolean) iblockdata.get(BlockVine.EAST)).booleanValue()) {
             i |= 8;
         }
 
@@ -333,23 +360,28 @@
     }
 
     protected BlockStateList getStateList() {
-        return new BlockStateList(this, new IBlockState[]{BlockVine.UP, BlockVine.NORTH, BlockVine.EAST, BlockVine.SOUTH, BlockVine.WEST});
+        return new BlockStateList(this, new IBlockState[] { BlockVine.UP, BlockVine.NORTH, BlockVine.EAST, BlockVine.SOUTH, BlockVine.WEST});
     }
 
     public static BlockStateBoolean getDirection(EnumDirection enumdirection) {
-        switch (enumdirection) {
-            case UP:
-                return BlockVine.UP;
-            case NORTH:
-                return BlockVine.NORTH;
-            case SOUTH:
-                return BlockVine.SOUTH;
-            case EAST:
-                return BlockVine.EAST;
-            case WEST:
-                return BlockVine.WEST;
-            default:
-                throw new IllegalArgumentException(enumdirection + " is an invalid choice");
+        switch (BlockVine.SyntheticClass_1.a[enumdirection.ordinal()]) {
+        case 1:
+            return BlockVine.UP;
+
+        case 2:
+            return BlockVine.NORTH;
+
+        case 3:
+            return BlockVine.SOUTH;
+
+        case 4:
+            return BlockVine.EAST;
+
+        case 5:
+            return BlockVine.WEST;
+
+        default:
+            throw new IllegalArgumentException(enumdirection + " is an invalid choice");
         }
     }
 
@@ -361,11 +393,49 @@
         for (int k = 0; k < j; ++k) {
             BlockStateBoolean blockstateboolean = ablockstateboolean[k];
 
-            if ((Boolean) iblockdata.get(blockstateboolean)) {
+            if (((Boolean) iblockdata.get(blockstateboolean)).booleanValue()) {
                 ++i;
             }
         }
 
         return i;
     }
+
+    static class SyntheticClass_1 {
+
+        static final int[] a = new int[EnumDirection.values().length];
+
+        static {
+            try {
+                BlockVine.SyntheticClass_1.a[EnumDirection.UP.ordinal()] = 1;
+            } catch (NoSuchFieldError nosuchfielderror) {
+                ;
+            }
+
+            try {
+                BlockVine.SyntheticClass_1.a[EnumDirection.NORTH.ordinal()] = 2;
+            } catch (NoSuchFieldError nosuchfielderror1) {
+                ;
+            }
+
+            try {
+                BlockVine.SyntheticClass_1.a[EnumDirection.SOUTH.ordinal()] = 3;
+            } catch (NoSuchFieldError nosuchfielderror2) {
+                ;
+            }
+
+            try {
+                BlockVine.SyntheticClass_1.a[EnumDirection.EAST.ordinal()] = 4;
+            } catch (NoSuchFieldError nosuchfielderror3) {
+                ;
+            }
+
+            try {
+                BlockVine.SyntheticClass_1.a[EnumDirection.WEST.ordinal()] = 5;
+            } catch (NoSuchFieldError nosuchfielderror4) {
+                ;
+            }
+
+        }
+    }
 }
