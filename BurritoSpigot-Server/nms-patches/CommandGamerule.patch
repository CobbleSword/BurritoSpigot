--- a/net/minecraft/server/CommandGamerule.java
+++ b/net/minecraft/server/CommandGamerule.java
@@ -20,32 +20,34 @@
     }
 
     public void execute(ICommandListener icommandlistener, String[] astring) throws CommandException {
-        GameRules gamerules = this.d();
+        GameRules gamerules = icommandlistener.getWorld().getGameRules(); // CraftBukkit - Use current world
         String s = astring.length > 0 ? astring[0] : "";
         String s1 = astring.length > 1 ? a(astring, 1) : "";
 
         switch (astring.length) {
-            case 0:
-                icommandlistener.sendMessage(new ChatComponentText(a((Object[]) gamerules.getGameRules())));
-                break;
-            case 1:
-                if (!gamerules.contains(s)) {
-                    throw new CommandException("commands.gamerule.norule", new Object[]{s});
-                }
+        case 0:
+            icommandlistener.sendMessage(new ChatComponentText(a((Object[]) gamerules.getGameRules())));
+            break;
+
+        case 1:
+            if (!gamerules.contains(s)) {
+                throw new CommandException("commands.gamerule.norule", new Object[] { s});
+            }
 
-                String s2 = gamerules.get(s);
+            String s2 = gamerules.get(s);
 
-                icommandlistener.sendMessage((new ChatComponentText(s)).a(" = ").a(s2));
-                icommandlistener.a(CommandObjectiveExecutor.EnumCommandResult.QUERY_RESULT, gamerules.c(s));
-                break;
-            default:
-                if (gamerules.a(s, GameRules.EnumGameRuleType.BOOLEAN_VALUE) && !"true".equals(s1) && !"false".equals(s1)) {
-                    throw new CommandException("commands.generic.boolean.invalid", new Object[]{s1});
-                }
+            icommandlistener.sendMessage((new ChatComponentText(s)).a(" = ").a(s2));
+            icommandlistener.a(CommandObjectiveExecutor.EnumCommandResult.QUERY_RESULT, gamerules.c(s));
+            break;
+
+        default:
+            if (gamerules.a(s, GameRules.EnumGameRuleType.BOOLEAN_VALUE) && !"true".equals(s1) && !"false".equals(s1)) {
+                throw new CommandException("commands.generic.boolean.invalid", new Object[] { s1});
+            }
 
-                gamerules.set(s, s1);
-                a(gamerules, s);
-                a(icommandlistener, this, "commands.gamerule.success", new Object[0]);
+            gamerules.set(s, s1);
+            a(gamerules, s);
+            a(icommandlistener, this, "commands.gamerule.success", new Object[0]);
         }
 
     }
@@ -72,7 +74,7 @@
                 GameRules gamerules = this.d();
 
                 if (gamerules.a(astring[0], GameRules.EnumGameRuleType.BOOLEAN_VALUE)) {
-                    return a(astring, new String[]{"true", "false"});
+                    return a(astring, new String[] { "true", "false"});
                 }
             }
 
@@ -83,4 +85,11 @@
     private GameRules d() {
         return MinecraftServer.getServer().getWorldServer(0).getGameRules();
     }
+
+    // CraftBukkit start - fix decompile error
+    @Override
+    public int compareTo(ICommand o) {
+        return a((ICommand) o);
+    }
+    // CraftBukkit end
 }
