--- a/net/minecraft/server/EntityHorse.java
+++ b/net/minecraft/server/EntityHorse.java
@@ -4,9 +4,11 @@
 import java.util.Iterator;
 import java.util.List;
 
+import org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason; // CraftBukkit
+
 public class EntityHorse extends EntityAnimal implements IInventoryListener {
 
-    private static final Predicate<Entity> bs = new Predicate<Entity>() {
+    private static final Predicate<Entity> bs = new Predicate() {
         public boolean a(Entity entity) {
             return entity instanceof EntityHorse && ((EntityHorse) entity).cA();
         }
@@ -16,13 +18,13 @@
         }
     };
     public static final IAttribute attributeJumpStrength = (new AttributeRanged((IAttribute) null, "horse.jumpStrength", 0.7D, 0.0D, 2.0D)).a("Jump Strength").a(true);
-    private static final String[] bu = new String[]{null, "textures/entity/horse/armor/horse_armor_iron.png", "textures/entity/horse/armor/horse_armor_gold.png", "textures/entity/horse/armor/horse_armor_diamond.png"};
-    private static final String[] bv = new String[]{"", "meo", "goo", "dio"};
-    private static final int[] bw = new int[]{0, 5, 7, 11};
-    private static final String[] bx = new String[]{"textures/entity/horse/horse_white.png", "textures/entity/horse/horse_creamy.png", "textures/entity/horse/horse_chestnut.png", "textures/entity/horse/horse_brown.png", "textures/entity/horse/horse_black.png", "textures/entity/horse/horse_gray.png", "textures/entity/horse/horse_darkbrown.png"};
-    private static final String[] by = new String[]{"hwh", "hcr", "hch", "hbr", "hbl", "hgr", "hdb"};
-    private static final String[] bz = new String[]{null, "textures/entity/horse/horse_markings_white.png", "textures/entity/horse/horse_markings_whitefield.png", "textures/entity/horse/horse_markings_whitedots.png", "textures/entity/horse/horse_markings_blackdots.png"};
-    private static final String[] bA = new String[]{"", "wo_", "wmo", "wdo", "bdo"};
+    private static final String[] bu = new String[] { null, "textures/entity/horse/armor/horse_armor_iron.png", "textures/entity/horse/armor/horse_armor_gold.png", "textures/entity/horse/armor/horse_armor_diamond.png"};
+    private static final String[] bv = new String[] { "", "meo", "goo", "dio"};
+    private static final int[] bw = new int[] { 0, 5, 7, 11};
+    private static final String[] bx = new String[] { "textures/entity/horse/horse_white.png", "textures/entity/horse/horse_creamy.png", "textures/entity/horse/horse_chestnut.png", "textures/entity/horse/horse_brown.png", "textures/entity/horse/horse_black.png", "textures/entity/horse/horse_gray.png", "textures/entity/horse/horse_darkbrown.png"};
+    private static final String[] by = new String[] { "hwh", "hcr", "hch", "hbr", "hbl", "hgr", "hdb"};
+    private static final String[] bz = new String[] { null, "textures/entity/horse/horse_markings_white.png", "textures/entity/horse/horse_markings_whitefield.png", "textures/entity/horse/horse_markings_whitedots.png", "textures/entity/horse/horse_markings_blackdots.png"};
+    private static final String[] bA = new String[] { "", "wo_", "wmo", "wdo", "bdo"};
     private int bB;
     private int bC;
     private int bD;
@@ -44,6 +46,7 @@
     private String bO;
     private String[] bP = new String[3];
     private boolean bQ = false;
+    public int maxDomestication = 100; // CraftBukkit - store max domestication value
 
     public EntityHorse(World world) {
         super(world);
@@ -64,15 +67,15 @@
 
     protected void h() {
         super.h();
-        this.datawatcher.a(16, 0);
-        this.datawatcher.a(19, (byte) 0);
-        this.datawatcher.a(20, 0);
+        this.datawatcher.a(16, Integer.valueOf(0));
+        this.datawatcher.a(19, Byte.valueOf((byte) 0));
+        this.datawatcher.a(20, Integer.valueOf(0));
         this.datawatcher.a(21, String.valueOf(""));
-        this.datawatcher.a(22, 0);
+        this.datawatcher.a(22, Integer.valueOf(0));
     }
 
     public void setType(int i) {
-        this.datawatcher.watch(19, (byte) i);
+        this.datawatcher.watch(19, Byte.valueOf((byte) i));
         this.dc();
     }
 
@@ -81,7 +84,7 @@
     }
 
     public void setVariant(int i) {
-        this.datawatcher.watch(20, i);
+        this.datawatcher.watch(20, Integer.valueOf(i));
         this.dc();
     }
 
@@ -96,17 +99,21 @@
             int i = this.getType();
 
             switch (i) {
-                case 0:
-                default:
-                    return LocaleI18n.get("entity.horse.name");
-                case 1:
-                    return LocaleI18n.get("entity.donkey.name");
-                case 2:
-                    return LocaleI18n.get("entity.mule.name");
-                case 3:
-                    return LocaleI18n.get("entity.zombiehorse.name");
-                case 4:
-                    return LocaleI18n.get("entity.skeletonhorse.name");
+            case 0:
+            default:
+                return LocaleI18n.get("entity.horse.name");
+
+            case 1:
+                return LocaleI18n.get("entity.donkey.name");
+
+            case 2:
+                return LocaleI18n.get("entity.mule.name");
+
+            case 3:
+                return LocaleI18n.get("entity.zombiehorse.name");
+
+            case 4:
+                return LocaleI18n.get("entity.skeletonhorse.name");
             }
         }
     }
@@ -119,9 +126,9 @@
         int j = this.datawatcher.getInt(16);
 
         if (flag) {
-            this.datawatcher.watch(16, j | i);
+            this.datawatcher.watch(16, Integer.valueOf(j | i));
         } else {
-            this.datawatcher.watch(16, j & ~i);
+            this.datawatcher.watch(16, Integer.valueOf(j & ~i));
         }
 
     }
@@ -172,6 +179,11 @@
     }
 
     public boolean cb() {
+        // PaperSpigot start - Configurable undead horse leashing
+        if (this.world.paperSpigotConfig.allowUndeadHorseLeashing) {
+            return super.cb();
+        }
+        // PaperSpigot end
         return !this.cR() && super.cb();
     }
 
@@ -217,7 +229,7 @@
     }
 
     public void e(ItemStack itemstack) {
-        this.datawatcher.watch(22, this.f(itemstack));
+        this.datawatcher.watch(22, Integer.valueOf(this.f(itemstack)));
         this.dc();
     }
 
@@ -316,13 +328,13 @@
     private int cZ() {
         int i = this.getType();
 
-        return this.hasChest() && (i == 1 || i == 2) ? 17 : 2;
+        return this.hasChest() /* && (i == 1 || i == 2) */ ? 17 : 2; // CraftBukkit - Remove type check
     }
 
     public void loadChest() {
         InventoryHorseChest inventoryhorsechest = this.inventoryChest;
 
-        this.inventoryChest = new InventoryHorseChest("HorseChest", this.cZ());
+        this.inventoryChest = new InventoryHorseChest("HorseChest", this.cZ(), this); // CraftBukkit - add this horse
         this.inventoryChest.a(this.getName());
         if (inventoryhorsechest != null) {
             inventoryhorsechest.b(this);
@@ -487,7 +499,7 @@
     }
 
     public int getMaxDomestication() {
-        return 100;
+        return this.maxDomestication; // CraftBukkit - return stored max domestication instead of 100
     }
 
     protected float bB() {
@@ -587,7 +599,7 @@
                     }
 
                     if (this.getHealth() < this.getMaxHealth() && f > 0.0F) {
-                        this.heal(f);
+                        this.heal(f, RegainReason.EATING); // CraftBukkit
                         flag = true;
                     }
 
@@ -694,11 +706,24 @@
 
     public void die(DamageSource damagesource) {
         super.die(damagesource);
+        /* CraftBukkit start - Handle chest dropping in dropDeathLoot below
         if (!this.world.isClientSide) {
             this.dropChest();
         }
+        // CraftBukkit end */
+    }
+
+    // CraftBukkit start - Add method
+    @Override
+    protected void dropDeathLoot(boolean flag, int i) {
+        super.dropDeathLoot(flag, i);
 
+        // Moved from die method above
+        if (!this.world.isClientSide) {
+            this.dropChest();
+        }
     }
+    // CraftBukkit end
 
     public void m() {
         if (this.random.nextInt(200) == 0) {
@@ -708,7 +733,7 @@
         super.m();
         if (!this.world.isClientSide) {
             if (this.random.nextInt(900) == 0 && this.deathTicks == 0) {
-                this.heal(1.0F);
+                this.heal(1.0F, RegainReason.REGEN); // CraftBukkit
             }
 
             if (!this.cy() && this.passenger == null && this.random.nextInt(300) == 0 && this.world.getType(new BlockPosition(MathHelper.floor(this.locX), MathHelper.floor(this.locY) - 1, MathHelper.floor(this.locZ))).getBlock() == Blocks.GRASS) {
@@ -951,6 +976,7 @@
         nbttagcompound.setInt("Temper", this.getTemper());
         nbttagcompound.setBoolean("Tame", this.isTame());
         nbttagcompound.setString("OwnerUUID", this.getOwnerUUID());
+        nbttagcompound.setInt("Bukkit.MaxDomestication", this.maxDomestication); // CraftBukkit
         if (this.hasChest()) {
             NBTTagList nbttaglist = new NBTTagList();
 
@@ -995,6 +1021,17 @@
             s = nbttagcompound.getString("OwnerUUID");
         } else {
             String s1 = nbttagcompound.getString("Owner");
+            // Spigot start
+            if ( s1 == null || s1.isEmpty() )
+            {
+                if (nbttagcompound.hasKey("OwnerName")) {
+                String owner = nbttagcompound.getString("OwnerName");
+                    if (owner != null && !owner.isEmpty()) {
+                        s1 = owner;
+                    }
+                }
+            }
+            // Spigot end
 
             s = NameReferencingFileConverter.a(s1);
         }
@@ -1003,6 +1040,12 @@
             this.setOwnerUUID(s);
         }
 
+        // CraftBukkit start
+        if (nbttagcompound.hasKey("Bukkit.MaxDomestication")) {
+            this.maxDomestication = nbttagcompound.getInt("Bukkit.MaxDomestication");
+        }
+        // CraftBukkit end
+
         AttributeInstance attributeinstance = this.getAttributeMap().a("Speed");
 
         if (attributeinstance != null) {
@@ -1168,18 +1211,25 @@
 
     public void v(int i) {
         if (this.cG()) {
+            // CraftBukkit start - fire HorseJumpEvent, use event power
             if (i < 0) {
                 i = 0;
-            } else {
-                this.bG = true;
-                this.dh();
             }
 
+            float power;
             if (i >= 90) {
-                this.br = 1.0F;
+                power = 1.0F;
             } else {
-                this.br = 0.4F + 0.4F * (float) i / 90.0F;
+                power = 0.4F + 0.4F * (float) i / 90.0F;
+            }
+
+            org.bukkit.event.entity.HorseJumpEvent event = org.bukkit.craftbukkit.event.CraftEventFactory.callHorseJumpEvent(this, power);
+            if (!event.isCancelled()) {
+                this.bG = true;
+                this.dh();
+                this.br = power;
             }
+            // CraftBukkit end
         }
 
     }
