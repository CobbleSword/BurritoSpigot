--- a/net/minecraft/server/EntityInsentient.java
+++ b/net/minecraft/server/EntityInsentient.java
@@ -4,6 +4,15 @@
 import java.util.List;
 import java.util.UUID;
 
+// CraftBukkit start
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.craftbukkit.entity.CraftLivingEntity;
+import org.bukkit.event.entity.EntityTargetLivingEntityEvent;
+import org.bukkit.event.entity.EntityTargetEvent;
+import org.bukkit.event.entity.EntityUnleashEvent;
+import org.bukkit.event.entity.EntityUnleashEvent.UnleashReason;
+// CraftBukkit end
+
 public abstract class EntityInsentient extends EntityLiving {
 
     public int a_;
@@ -24,6 +33,7 @@
     private boolean bo;
     private Entity bp;
     private NBTTagCompound bq;
+    public PathfinderGoalFloat goalFloat; // PaperSpigot
 
     public EntityInsentient(World world) {
         super(world);
@@ -40,6 +50,9 @@
             this.dropChances[i] = 0.085F;
         }
 
+        // CraftBukkit start - default persistance to type's persistance value
+        this.persistent = !isTypeNotPersistent();
+        // CraftBukkit end
     }
 
     protected void initAttributes() {
@@ -76,7 +89,37 @@
     }
 
     public void setGoalTarget(EntityLiving entityliving) {
+        // CraftBukkit start - fire event
+        setGoalTarget(entityliving, EntityTargetEvent.TargetReason.UNKNOWN, true);
+    }
+
+    public void setGoalTarget(EntityLiving entityliving, EntityTargetEvent.TargetReason reason, boolean fireEvent) {
+        if (getGoalTarget() == entityliving) return;
+        if (fireEvent) {
+            if (reason == EntityTargetEvent.TargetReason.UNKNOWN && getGoalTarget() != null && entityliving == null) {
+                reason = getGoalTarget().isAlive() ? EntityTargetEvent.TargetReason.FORGOT_TARGET : EntityTargetEvent.TargetReason.TARGET_DIED;
+            }
+            if (reason == EntityTargetEvent.TargetReason.UNKNOWN) {
+                world.getServer().getLogger().log(java.util.logging.Level.WARNING, "Unknown target reason, please report on the issue tracker", new Exception());
+            }
+            CraftLivingEntity ctarget = null;
+            if (entityliving != null) {
+                ctarget = (CraftLivingEntity) entityliving.getBukkitEntity();
+            }
+            EntityTargetLivingEntityEvent event = new EntityTargetLivingEntityEvent(this.getBukkitEntity(), ctarget, reason);
+            world.getServer().getPluginManager().callEvent(event);
+            if (event.isCancelled()) {
+                return;
+            }
+
+            if (event.getTarget() != null) {
+                entityliving = ((CraftLivingEntity) event.getTarget()).getHandle();
+            } else {
+                entityliving = null;
+            }
+        }
         this.goalTarget = entityliving;
+        // CraftBukkit end
     }
 
     public boolean a(Class<? extends EntityLiving> oclass) {
@@ -87,7 +130,7 @@
 
     protected void h() {
         super.h();
-        this.datawatcher.a(15, (byte) 0);
+        this.datawatcher.a(15, Byte.valueOf((byte) 0));
     }
 
     public int w() {
@@ -139,7 +182,7 @@
                 double d2 = this.random.nextGaussian() * 0.02D;
                 double d3 = 10.0D;
 
-                this.world.addParticle(EnumParticle.EXPLOSION_NORMAL, this.locX + (double) (this.random.nextFloat() * this.width * 2.0F) - (double) this.width - d0 * d3, this.locY + (double) (this.random.nextFloat() * this.length) - d1 * d3, this.locZ + (double) (this.random.nextFloat() * this.width * 2.0F) - (double) this.width - d2 * d3, d0, d1, d2);
+                this.world.addParticle(EnumParticle.EXPLOSION_NORMAL, this.locX + (double) (this.random.nextFloat() * this.width * 2.0F) - (double) this.width - d0 * d3, this.locY + (double) (this.random.nextFloat() * this.length) - d1 * d3, this.locZ + (double) (this.random.nextFloat() * this.width * 2.0F) - (double) this.width - d2 * d3, d0, d1, d2, new int[0]);
             }
         } else {
             this.world.broadcastEntityEffect(this, (byte) 20);
@@ -168,6 +211,7 @@
         return null;
     }
 
+    protected ItemStack headDrop = null; // CraftBukkit
     protected void dropDeathLoot(boolean flag, int i) {
         Item item = this.getLoot();
 
@@ -183,6 +227,12 @@
             }
         }
 
+        // CraftBukkit start
+        if (headDrop != null) {
+            this.a(headDrop, 0.0F);
+            headDrop = null;
+        }
+        // CraftBukkit end
     }
 
     public void b(NBTTagCompound nbttagcompound) {
@@ -235,11 +285,20 @@
 
     public void a(NBTTagCompound nbttagcompound) {
         super.a(nbttagcompound);
+        
+        // CraftBukkit start - If looting or persistence is false only use it if it was set after we started using it
         if (nbttagcompound.hasKeyOfType("CanPickUpLoot", 1)) {
-            this.j(nbttagcompound.getBoolean("CanPickUpLoot"));
+            boolean data = nbttagcompound.getBoolean("CanPickUpLoot");
+            if (isLevelAtLeast(nbttagcompound, 1) || data) {
+                this.j(data);
+            }
         }
 
-        this.persistent = nbttagcompound.getBoolean("PersistenceRequired");
+        boolean data = nbttagcompound.getBoolean("PersistenceRequired");
+        if (isLevelAtLeast(nbttagcompound, 1) || data) {
+            this.persistent = data;
+        }
+        // CraftBukkit end
         NBTTagList nbttaglist;
         int i;
 
@@ -372,7 +431,7 @@
         if (this.persistent) {
             this.ticksFarFromPlayer = 0;
         } else {
-            EntityHuman entityhuman = this.world.findNearbyPlayer(this, -1.0D);
+            EntityHuman entityhuman = this.world.findNearbyPlayerWhoAffectsSpawning(this, -1.0D); // PaperSpigot - Affects Spawning API
 
             if (entityhuman != null) {
                 double d0 = entityhuman.locX - this.locX;
@@ -380,13 +439,13 @@
                 double d2 = entityhuman.locZ - this.locZ;
                 double d3 = d0 * d0 + d1 * d1 + d2 * d2;
 
-                if (this.isTypeNotPersistent() && d3 > 16384.0D) {
+                if (d3 > this.world.paperSpigotConfig.hardDespawnDistance) { // CraftBukkit - remove isTypeNotPersistent() check // PaperSpigot - custom despawn distances
                     this.die();
                 }
 
-                if (this.ticksFarFromPlayer > 600 && this.random.nextInt(800) == 0 && d3 > 1024.0D && this.isTypeNotPersistent()) {
+                if (this.ticksFarFromPlayer > 600 && this.random.nextInt(800) == 0 && d3 > this.world.paperSpigotConfig.softDespawnDistance) { // CraftBukkit - remove isTypeNotPersistent() check // PaperSpigot - custom despawn distance
                     this.die();
-                } else if (d3 < 1024.0D) {
+                } else if (d3 < this.world.paperSpigotConfig.softDespawnDistance) { // PaperSpigot - custom despawn distances
                     this.ticksFarFromPlayer = 0;
                 }
             }
@@ -399,6 +458,18 @@
         this.world.methodProfiler.a("checkDespawn");
         this.D();
         this.world.methodProfiler.b();
+        // Spigot Start
+        if ( this.fromMobSpawner )
+        {
+            // PaperSpigot start - Allow nerfed mobs to jump
+            if (goalFloat != null) {
+                if (goalFloat.a()) goalFloat.e();
+                this.g.b();
+            }
+            // PaperSpigot end
+            return;
+        }
+        // Spigot End
         this.world.methodProfiler.a("sensing");
         this.bk.a();
         this.world.methodProfiler.b();
@@ -580,14 +651,17 @@
         if (itemstack.getItem() != Item.getItemOf(Blocks.PUMPKIN) && itemstack.getItem() != Items.SKULL) {
             if (itemstack.getItem() instanceof ItemArmor) {
                 switch (((ItemArmor) itemstack.getItem()).b) {
-                    case 0:
-                        return 4;
-                    case 1:
-                        return 3;
-                    case 2:
-                        return 2;
-                    case 3:
-                        return 1;
+                case 0:
+                    return 4;
+
+                case 1:
+                    return 3;
+
+                case 2:
+                    return 2;
+
+                case 3:
+                    return 1;
                 }
             }
 
@@ -599,56 +673,60 @@
 
     public static Item a(int i, int j) {
         switch (i) {
-            case 4:
-                if (j == 0) {
-                    return Items.LEATHER_HELMET;
-                } else if (j == 1) {
-                    return Items.GOLDEN_HELMET;
-                } else if (j == 2) {
-                    return Items.CHAINMAIL_HELMET;
-                } else if (j == 3) {
-                    return Items.IRON_HELMET;
-                } else if (j == 4) {
-                    return Items.DIAMOND_HELMET;
-                }
-            case 3:
-                if (j == 0) {
-                    return Items.LEATHER_CHESTPLATE;
-                } else if (j == 1) {
-                    return Items.GOLDEN_CHESTPLATE;
-                } else if (j == 2) {
-                    return Items.CHAINMAIL_CHESTPLATE;
-                } else if (j == 3) {
-                    return Items.IRON_CHESTPLATE;
-                } else if (j == 4) {
-                    return Items.DIAMOND_CHESTPLATE;
-                }
-            case 2:
-                if (j == 0) {
-                    return Items.LEATHER_LEGGINGS;
-                } else if (j == 1) {
-                    return Items.GOLDEN_LEGGINGS;
-                } else if (j == 2) {
-                    return Items.CHAINMAIL_LEGGINGS;
-                } else if (j == 3) {
-                    return Items.IRON_LEGGINGS;
-                } else if (j == 4) {
-                    return Items.DIAMOND_LEGGINGS;
-                }
-            case 1:
-                if (j == 0) {
-                    return Items.LEATHER_BOOTS;
-                } else if (j == 1) {
-                    return Items.GOLDEN_BOOTS;
-                } else if (j == 2) {
-                    return Items.CHAINMAIL_BOOTS;
-                } else if (j == 3) {
-                    return Items.IRON_BOOTS;
-                } else if (j == 4) {
-                    return Items.DIAMOND_BOOTS;
-                }
-            default:
-                return null;
+        case 4:
+            if (j == 0) {
+                return Items.LEATHER_HELMET;
+            } else if (j == 1) {
+                return Items.GOLDEN_HELMET;
+            } else if (j == 2) {
+                return Items.CHAINMAIL_HELMET;
+            } else if (j == 3) {
+                return Items.IRON_HELMET;
+            } else if (j == 4) {
+                return Items.DIAMOND_HELMET;
+            }
+
+        case 3:
+            if (j == 0) {
+                return Items.LEATHER_CHESTPLATE;
+            } else if (j == 1) {
+                return Items.GOLDEN_CHESTPLATE;
+            } else if (j == 2) {
+                return Items.CHAINMAIL_CHESTPLATE;
+            } else if (j == 3) {
+                return Items.IRON_CHESTPLATE;
+            } else if (j == 4) {
+                return Items.DIAMOND_CHESTPLATE;
+            }
+
+        case 2:
+            if (j == 0) {
+                return Items.LEATHER_LEGGINGS;
+            } else if (j == 1) {
+                return Items.GOLDEN_LEGGINGS;
+            } else if (j == 2) {
+                return Items.CHAINMAIL_LEGGINGS;
+            } else if (j == 3) {
+                return Items.IRON_LEGGINGS;
+            } else if (j == 4) {
+                return Items.DIAMOND_LEGGINGS;
+            }
+
+        case 1:
+            if (j == 0) {
+                return Items.LEATHER_BOOTS;
+            } else if (j == 1) {
+                return Items.GOLDEN_BOOTS;
+            } else if (j == 2) {
+                return Items.CHAINMAIL_BOOTS;
+            } else if (j == 3) {
+                return Items.IRON_BOOTS;
+            } else if (j == 4) {
+                return Items.DIAMOND_BOOTS;
+            }
+
+        default:
+            return null;
         }
     }
 
@@ -700,6 +778,12 @@
 
     public final boolean e(EntityHuman entityhuman) {
         if (this.cc() && this.getLeashHolder() == entityhuman) {
+            // CraftBukkit start - fire PlayerUnleashEntityEvent
+            if (CraftEventFactory.callPlayerUnleashEntityEvent(this, entityhuman).isCancelled()) {
+                ((EntityPlayer) entityhuman).playerConnection.sendPacket(new PacketPlayOutAttachEntity(1, this, this.getLeashHolder()));
+                return false;
+            }
+            // CraftBukkit end
             this.unleash(true, !entityhuman.abilities.canInstantlyBuild);
             return true;
         } else {
@@ -707,12 +791,24 @@
 
             if (itemstack != null && itemstack.getItem() == Items.LEAD && this.cb()) {
                 if (!(this instanceof EntityTameableAnimal) || !((EntityTameableAnimal) this).isTamed()) {
+                    // CraftBukkit start - fire PlayerLeashEntityEvent
+                    if (CraftEventFactory.callPlayerLeashEntityEvent(this, entityhuman, entityhuman).isCancelled()) {
+                        ((EntityPlayer) entityhuman).playerConnection.sendPacket(new PacketPlayOutAttachEntity(1, this, this.getLeashHolder()));
+                        return false;
+                    }
+                    // CraftBukkit end
                     this.setLeashHolder(entityhuman, true);
                     --itemstack.count;
                     return true;
                 }
 
                 if (((EntityTameableAnimal) this).e((EntityLiving) entityhuman)) {
+                    // CraftBukkit start - fire PlayerLeashEntityEvent
+                    if (CraftEventFactory.callPlayerLeashEntityEvent(this, entityhuman, entityhuman).isCancelled()) {
+                        ((EntityPlayer) entityhuman).playerConnection.sendPacket(new PacketPlayOutAttachEntity(1, this, this.getLeashHolder()));
+                        return false;
+                    }
+                    // CraftBukkit end
                     this.setLeashHolder(entityhuman, true);
                     --itemstack.count;
                     return true;
@@ -734,10 +830,12 @@
 
         if (this.bo) {
             if (!this.isAlive()) {
+                this.world.getServer().getPluginManager().callEvent(new EntityUnleashEvent(this.getBukkitEntity(), UnleashReason.PLAYER_UNLEASH)); // CraftBukkit
                 this.unleash(true, true);
             }
 
             if (this.bp == null || this.bp.dead) {
+                this.world.getServer().getPluginManager().callEvent(new EntityUnleashEvent(this.getBukkitEntity(), UnleashReason.HOLDER_GONE)); // CraftBukkit
                 this.unleash(true, true);
             }
         }
@@ -804,6 +902,7 @@
 
                 this.bp = entityleash;
             } else {
+                this.world.getServer().getPluginManager().callEvent(new EntityUnleashEvent(this.getBukkitEntity(), UnleashReason.UNKNOWN)); // CraftBukkit
                 this.unleash(false, true);
             }
         }
