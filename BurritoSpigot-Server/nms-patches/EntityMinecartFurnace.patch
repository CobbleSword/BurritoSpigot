--- a/net/minecraft/server/EntityMinecartFurnace.java
+++ b/net/minecraft/server/EntityMinecartFurnace.java
@@ -14,8 +14,8 @@
         super(world, d0, d1, d2);
     }
 
-    public EntityMinecartAbstract.EnumMinecartType s() {
-        return EntityMinecartAbstract.EnumMinecartType.FURNACE;
+    public EnumMinecartType s() {
+        return EnumMinecartType.FURNACE;
     }
 
     protected void h() {
@@ -35,7 +35,7 @@
 
         this.i(this.c > 0);
         if (this.j() && this.random.nextInt(4) == 0) {
-            this.world.addParticle(EnumParticle.SMOKE_LARGE, this.locX, this.locY + 0.8D, this.locZ, 0.0D, 0.0D, 0.0D);
+            this.world.addParticle(EnumParticle.SMOKE_LARGE, this.locX, this.locY + 0.8D, this.locZ, 0.0D, 0.0D, 0.0D, new int[0]);
         }
 
     }
@@ -58,17 +58,12 @@
 
         if (d0 > 1.0E-4D && this.motX * this.motX + this.motZ * this.motZ > 0.001D) {
             d0 = (double) MathHelper.sqrt(d0);
-            this.a /= d0;
-            this.b /= d0;
-            if (this.a * this.motX + this.b * this.motZ < 0.0D) {
-                this.a = 0.0D;
-                this.b = 0.0D;
-            } else {
-                double d1 = d0 / this.m();
-
-                this.a *= d1;
-                this.b *= d1;
-            }
+            // PaperSpigot - Don't lose all your velocity on corners
+            // https://bugs.mojang.com/browse/MC-51053?focusedCommentId=223854
+            double d1 = (double) MathHelper.sqrt(this.motX * this.motX + this.motZ * this.motZ);
+            this.a = (motX / d1) * d0;
+            this.b = (motZ / d1) * d0;
+            // PaperSpigot end
         }
 
     }
@@ -132,9 +127,9 @@
 
     protected void i(boolean flag) {
         if (flag) {
-            this.datawatcher.watch(16, (byte) (this.datawatcher.getByte(16) | 1));
+            this.datawatcher.watch(16, Byte.valueOf((byte) (this.datawatcher.getByte(16) | 1)));
         } else {
-            this.datawatcher.watch(16, (byte) (this.datawatcher.getByte(16) & -2));
+            this.datawatcher.watch(16, Byte.valueOf((byte) (this.datawatcher.getByte(16) & -2)));
         }
 
     }
