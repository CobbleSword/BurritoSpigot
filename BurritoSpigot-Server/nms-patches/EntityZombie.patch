--- a/net/minecraft/server/EntityZombie.java
+++ b/net/minecraft/server/EntityZombie.java
@@ -4,16 +4,25 @@
 import java.util.List;
 import java.util.UUID;
 
+//CraftBukkit start
+import org.bukkit.craftbukkit.entity.CraftLivingEntity;
+import org.bukkit.event.entity.CreatureSpawnEvent;
+import org.bukkit.event.entity.EntityCombustByEntityEvent;
+import org.bukkit.event.entity.EntityCombustEvent;
+import org.bukkit.event.entity.EntityTargetEvent;
+//CraftBukkit end
+
 public class EntityZombie extends EntityMonster {
 
     protected static final IAttribute a = (new AttributeRanged((IAttribute) null, "zombie.spawnReinforcements", 0.0D, 0.0D, 1.0D)).a("Spawn Reinforcements Chance");
     private static final UUID b = UUID.fromString("B9766B59-9566-4402-BC1F-2EE2A276D836");
-    private static final AttributeModifier c = new AttributeModifier(EntityZombie.b, "Baby speed boost", 0.5D, 1);
+    private static final AttributeModifier c = new AttributeModifier(EntityZombie.b, "Baby speed boost", org.github.paperspigot.PaperSpigotConfig.babyZombieMovementSpeed, 1); // PaperSpigot - Configurable baby zombie movement speed
     private final PathfinderGoalBreakDoor bm = new PathfinderGoalBreakDoor(this);
     private int bn;
     private boolean bo = false;
     private float bp = -1.0F;
     private float bq;
+    private int lastTick = MinecraftServer.currentTick; // CraftBukkit - add field
 
     public EntityZombie(World world) {
         super(world);
@@ -29,13 +38,13 @@
     }
 
     protected void n() {
-        this.goalSelector.a(4, new PathfinderGoalMeleeAttack(this, EntityVillager.class, 1.0D, true));
+        if ( world.spigotConfig.zombieAggressiveTowardsVillager ) this.goalSelector.a(4, new PathfinderGoalMeleeAttack(this, EntityVillager.class, 1.0D, true)); // Spigot
         this.goalSelector.a(4, new PathfinderGoalMeleeAttack(this, EntityIronGolem.class, 1.0D, true));
         this.goalSelector.a(6, new PathfinderGoalMoveThroughVillage(this, 1.0D, false));
-        this.targetSelector.a(1, new PathfinderGoalHurtByTarget(this, true, new Class[]{EntityPigZombie.class}));
-        this.targetSelector.a(2, new PathfinderGoalNearestAttackableTarget<>(this, EntityHuman.class, true));
-        this.targetSelector.a(2, new PathfinderGoalNearestAttackableTarget<>(this, EntityVillager.class, false));
-        this.targetSelector.a(2, new PathfinderGoalNearestAttackableTarget<>(this, EntityIronGolem.class, true));
+        this.targetSelector.a(1, new PathfinderGoalHurtByTarget(this, true, new Class[] { EntityPigZombie.class}));
+        this.targetSelector.a(2, new PathfinderGoalNearestAttackableTarget(this, EntityHuman.class, true));
+        if ( world.spigotConfig.zombieAggressiveTowardsVillager ) this.targetSelector.a(2, new PathfinderGoalNearestAttackableTarget(this, EntityVillager.class, false)); // Spigot
+        this.targetSelector.a(2, new PathfinderGoalNearestAttackableTarget(this, EntityIronGolem.class, true));
     }
 
     protected void initAttributes() {
@@ -48,9 +57,9 @@
 
     protected void h() {
         super.h();
-        this.getDataWatcher().a(12, (byte) 0);
-        this.getDataWatcher().a(13, (byte) 0);
-        this.getDataWatcher().a(14, (byte) 0);
+        this.getDataWatcher().a(12, Byte.valueOf((byte) 0));
+        this.getDataWatcher().a(13, Byte.valueOf((byte) 0));
+        this.getDataWatcher().a(14, Byte.valueOf((byte) 0));
     }
 
     public int br() {
@@ -92,7 +101,7 @@
     }
 
     public void setBaby(boolean flag) {
-        this.getDataWatcher().watch(12, (byte) (flag ? 1 : 0));
+        this.getDataWatcher().watch(12, Byte.valueOf((byte) (flag ? 1 : 0)));
         if (this.world != null && !this.world.isClientSide) {
             AttributeInstance attributeinstance = this.getAttributeInstance(GenericAttributes.MOVEMENT_SPEED);
 
@@ -110,7 +119,7 @@
     }
 
     public void setVillager(boolean flag) {
-        this.getDataWatcher().watch(13, (byte) (flag ? 1 : 0));
+        this.getDataWatcher().watch(13, Byte.valueOf((byte) (flag ? 1 : 0)));
     }
 
     public void m() {
@@ -135,7 +144,14 @@
                 }
 
                 if (flag) {
-                    this.setOnFire(8);
+                    // CraftBukkit start
+                    EntityCombustEvent event = new EntityCombustEvent(this.getBukkitEntity(), 8);
+                    this.world.getServer().getPluginManager().callEvent(event);
+
+                    if (!event.isCancelled()) {
+                        this.setOnFire(event.getDuration());
+                    }
+                    // CraftBukkit end
                 }
             }
         }
@@ -169,8 +185,8 @@
                     if (World.a((IBlockAccess) this.world, new BlockPosition(i1, j1 - 1, k1)) && this.world.getLightLevel(new BlockPosition(i1, j1, k1)) < 10) {
                         entityzombie.setPosition((double) i1, (double) j1, (double) k1);
                         if (!this.world.isPlayerNearby((double) i1, (double) j1, (double) k1, 7.0D) && this.world.a(entityzombie.getBoundingBox(), (Entity) entityzombie) && this.world.getCubes(entityzombie, entityzombie.getBoundingBox()).isEmpty() && !this.world.containsLiquid(entityzombie.getBoundingBox())) {
-                            this.world.addEntity(entityzombie);
-                            entityzombie.setGoalTarget(entityliving);
+                            this.world.addEntity(entityzombie, CreatureSpawnEvent.SpawnReason.REINFORCEMENTS); // CraftBukkit
+                            entityzombie.setGoalTarget(entityliving, EntityTargetEvent.TargetReason.REINFORCEMENT_TARGET, true);
                             entityzombie.prepare(this.world.E(new BlockPosition(entityzombie)), (GroupDataEntity) null);
                             this.getAttributeInstance(EntityZombie.a).b(new AttributeModifier("Zombie reinforcement caller charge", -0.05000000074505806D, 0));
                             entityzombie.getAttributeInstance(EntityZombie.a).b(new AttributeModifier("Zombie reinforcement callee charge", -0.05000000074505806D, 0));
@@ -190,6 +206,12 @@
         if (!this.world.isClientSide && this.cp()) {
             int i = this.cr();
 
+            // CraftBukkit start - Use wall time instead of ticks for villager conversion
+            int elapsedTicks = MinecraftServer.currentTick - this.lastTick;
+            this.lastTick = MinecraftServer.currentTick;
+            i *= elapsedTicks;
+            // CraftBukkit end
+
             this.bn -= i;
             if (this.bn <= 0) {
                 this.cq();
@@ -206,7 +228,14 @@
             int i = this.world.getDifficulty().a();
 
             if (this.bA() == null && this.isBurning() && this.random.nextFloat() < (float) i * 0.3F) {
-                entity.setOnFire(2 * i);
+                // CraftBukkit start
+                EntityCombustByEntityEvent event = new EntityCombustByEntityEvent(this.getBukkitEntity(), entity.getBukkitEntity(), 2 * i);
+                this.world.getServer().getPluginManager().callEvent(event);
+
+                if (!event.isCancelled()) {
+                    entity.setOnFire(event.getDuration());
+                }
+                // CraftBukkit end
             }
         }
 
@@ -239,14 +268,16 @@
 
     protected void getRareDrop() {
         switch (this.random.nextInt(3)) {
-            case 0:
-                this.a(Items.IRON_INGOT, 1);
-                break;
-            case 1:
-                this.a(Items.CARROT, 1);
-                break;
-            case 2:
-                this.a(Items.POTATO, 1);
+        case 0:
+            this.a(Items.IRON_INGOT, 1);
+            break;
+
+        case 1:
+            this.a(Items.CARROT, 1);
+            break;
+
+        case 2:
+            this.a(Items.POTATO, 1);
         }
 
     }
@@ -320,7 +351,7 @@
                 entityzombie.setCustomNameVisible(entityinsentient.getCustomNameVisible());
             }
 
-            this.world.addEntity(entityzombie);
+            this.world.addEntity(entityzombie, CreatureSpawnEvent.SpawnReason.INFECTION); // CraftBukkit - add SpawnReason
             this.world.a((EntityHuman) null, 1016, new BlockPosition((int) this.locX, (int) this.locY, (int) this.locZ), 0);
         }
 
@@ -346,7 +377,7 @@
 
         this.j(this.random.nextFloat() < 0.55F * f);
         if (object == null) {
-            object = new EntityZombie.GroupDataZombie(this.world.random.nextFloat() < 0.05F, this.world.random.nextFloat() < 0.05F);
+            object = new EntityZombie.GroupDataZombie(this.world.random.nextFloat() < 0.05F, this.world.random.nextFloat() < 0.05F, (EntityZombie.SyntheticClass_1) null);
         }
 
         if (object instanceof EntityZombie.GroupDataZombie) {
@@ -373,7 +404,7 @@
                     entitychicken1.setPositionRotation(this.locX, this.locY, this.locZ, this.yaw, 0.0F);
                     entitychicken1.prepare(difficultydamagescaler, (GroupDataEntity) null);
                     entitychicken1.l(true);
-                    this.world.addEntity(entitychicken1);
+                    this.world.addEntity(entitychicken1, CreatureSpawnEvent.SpawnReason.MOUNT);
                     this.mount(entitychicken1);
                 }
             }
@@ -431,7 +462,7 @@
 
     protected void a(int i) {
         this.bn = i;
-        this.getDataWatcher().watch(14, (byte) 1);
+        this.getDataWatcher().watch(14, Byte.valueOf((byte) 1));
         this.removeEffect(MobEffectList.WEAKNESS.id);
         this.addEffect(new MobEffect(MobEffectList.INCREASE_DAMAGE.id, i, Math.min(this.world.getDifficulty().a() - 1, 0)));
         this.world.broadcastEntityEffect(this, (byte) 16);
@@ -462,7 +493,7 @@
             entityvillager.setCustomNameVisible(this.getCustomNameVisible());
         }
 
-        this.world.addEntity(entityvillager);
+        this.world.addEntity(entityvillager, CreatureSpawnEvent.SpawnReason.CURED); // CraftBukkit - add SpawnReason
         entityvillager.addEffect(new MobEffect(MobEffectList.CONFUSION.id, 200, 0));
         this.world.a((EntityHuman) null, 1017, new BlockPosition((int) this.locX, (int) this.locY, (int) this.locZ), 0);
     }
@@ -498,7 +529,7 @@
         this.a(flag ? 0.5F : 1.0F);
     }
 
-    protected final void setSize(float f, float f1) {
+    public final void setSize(float f, float f1) { // CraftBukkit - public
         boolean flag = this.bp > 0.0F && this.bq > 0.0F;
 
         this.bp = f;
@@ -518,14 +549,20 @@
     }
 
     public void die(DamageSource damagesource) {
-        super.die(damagesource);
+        // super.die(damagesource); // CraftBukkit
         if (damagesource.getEntity() instanceof EntityCreeper && !(this instanceof EntityPigZombie) && ((EntityCreeper) damagesource.getEntity()).isPowered() && ((EntityCreeper) damagesource.getEntity()).cp()) {
             ((EntityCreeper) damagesource.getEntity()).cq();
-            this.a(new ItemStack(Items.SKULL, 1, 2), 0.0F);
+            // CraftBukkit start
+            // this.a(new ItemStack(Items.SKULL, 1, 2), 0.0F);
+            headDrop = new ItemStack(Items.SKULL, 1, 2);
+            // CraftBukkit end
         }
 
+        super.die(damagesource); // CraftBukkit - moved from above
     }
 
+    static class SyntheticClass_1 {    }
+
     class GroupDataZombie implements GroupDataEntity {
 
         public boolean a;
@@ -538,7 +575,7 @@
             this.b = flag1;
         }
 
-        GroupDataZombie(boolean flag, boolean flag1, Object object) {
+        GroupDataZombie(boolean flag, boolean flag1, EntityZombie.SyntheticClass_1 entityzombie_syntheticclass_1) {
             this(flag, flag1);
         }
     }
