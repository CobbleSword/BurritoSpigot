--- a/net/minecraft/server/MobSpawnerAbstract.java
+++ b/net/minecraft/server/MobSpawnerAbstract.java
@@ -4,12 +4,22 @@
 import java.util.Iterator;
 import java.util.List;
 
+// CraftBukkit start
+import net.techcable.tacospigot.event.entity.SpawnerPreSpawnEvent;
+
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.entity.EntityType;
+import org.bukkit.event.entity.CreatureSpawnEvent;
+import org.bukkit.event.entity.SpawnerSpawnEvent;
+// CraftBukkit end
+
 public abstract class MobSpawnerAbstract {
 
     public int spawnDelay = 20;
     private String mobName = "Pig";
-    private final List<net.minecraft.server.TileEntityMobSpawnerData> mobs = Lists.newArrayList();
-    private net.minecraft.server.TileEntityMobSpawnerData spawnData;
+    private final List<MobSpawnerAbstract.a> mobs = Lists.newArrayList();
+    private MobSpawnerAbstract.a spawnData;
     private double e;
     private double f;
     private int minSpawnDelay = 200;
@@ -19,18 +29,24 @@
     private int maxNearbyEntities = 6;
     private int requiredPlayerRange = 16;
     private int spawnRange = 4;
+    private int tickDelay = 0; // PaperSpigot
 
     public MobSpawnerAbstract() {}
 
     public String getMobName() {
         if (this.i() == null) {
+            // CraftBukkit start - fix NPE
+            if (this.mobName == null) {
+                this.mobName = "Pig";
+            }
+            // CraftBukkit end
             if (this.mobName != null && this.mobName.equals("Minecart")) {
                 this.mobName = "MinecartRideable";
             }
 
             return this.mobName;
         } else {
-            return net.minecraft.server.TileEntityMobSpawnerData.a(this.i());
+            return this.i().d;
         }
     }
 
@@ -41,10 +57,14 @@
     private boolean g() {
         BlockPosition blockposition = this.b();
 
-        return this.a().isPlayerNearby((double) blockposition.getX() + 0.5D, (double) blockposition.getY() + 0.5D, (double) blockposition.getZ() + 0.5D, (double) this.requiredPlayerRange);
+        return this.a().isPlayerNearbyWhoAffectsSpawning((double) blockposition.getX() + 0.5D, (double) blockposition.getY() + 0.5D, (double) blockposition.getZ() + 0.5D, (double) this.requiredPlayerRange); // PaperSpigot - Affects Spawning API
     }
 
     public void c() {
+        // PaperSpigot start - Configurable mob spawner tick rate
+        if (spawnDelay > 0 && --tickDelay > 0) return;
+        tickDelay = this.a().paperSpigotConfig.mobSpawnerTickRate;
+        // PaperSpigot end
         if (this.g()) {
             BlockPosition blockposition = this.b();
             double d0;
@@ -54,27 +74,37 @@
                 double d2 = (double) ((float) blockposition.getY() + this.a().random.nextFloat());
 
                 d0 = (double) ((float) blockposition.getZ() + this.a().random.nextFloat());
-                this.a().addParticle(EnumParticle.SMOKE_NORMAL, d1, d2, d0, 0.0D, 0.0D, 0.0D);
-                this.a().addParticle(EnumParticle.FLAME, d1, d2, d0, 0.0D, 0.0D, 0.0D);
+                this.a().addParticle(EnumParticle.SMOKE_NORMAL, d1, d2, d0, 0.0D, 0.0D, 0.0D, new int[0]);
+                this.a().addParticle(EnumParticle.FLAME, d1, d2, d0, 0.0D, 0.0D, 0.0D, new int[0]);
                 if (this.spawnDelay > 0) {
-                    --this.spawnDelay;
+                    this.spawnDelay -= tickDelay; // PaperSpigot
                 }
 
                 this.f = this.e;
                 this.e = (this.e + (double) (1000.0F / ((float) this.spawnDelay + 200.0F))) % 360.0D;
             } else {
-                if (this.spawnDelay == -1) {
+                if (this.spawnDelay < -tickDelay) { // PaperSpigot
                     this.h();
                 }
 
                 if (this.spawnDelay > 0) {
-                    --this.spawnDelay;
+                    this.spawnDelay -= tickDelay; // PaperSpigot
                     return;
                 }
 
                 boolean flag = false;
 
                 for (int i = 0; i < this.spawnCount; ++i) {
+                    // TacoSpigot start
+                    SpawnerPreSpawnEvent event = new SpawnerPreSpawnEvent( new Location(this.a().getWorld(), blockposition.getX(), blockposition.getY(), blockposition.getZ()), EntityType.fromName(this.getMobName()));
+                    this.a().getServer().getPluginManager().callEvent(event);
+
+                    if (event.isCancelled()) {
+                        flag = true;
+                        break;
+                    }
+                    // TacoSpigot end
+
                     Entity entity = EntityTypes.createEntityByName(this.getMobName(), this.a());
 
                     if (entity == null) {
@@ -118,18 +148,29 @@
             NBTTagCompound nbttagcompound = new NBTTagCompound();
 
             entity.d(nbttagcompound);
-            Iterator iterator = net.minecraft.server.TileEntityMobSpawnerData.b(this.i()).c().iterator();
+            Iterator iterator = this.i().c.c().iterator();
 
             while (iterator.hasNext()) {
                 String s = (String) iterator.next();
-                NBTBase nbtbase = net.minecraft.server.TileEntityMobSpawnerData.b(this.i()).get(s);
+                NBTBase nbtbase = this.i().c.get(s);
 
                 nbttagcompound.set(s, nbtbase.clone());
             }
 
             entity.f(nbttagcompound);
             if (entity.world != null && flag) {
-                entity.world.addEntity(entity);
+                // CraftBukkit start - call SpawnerSpawnEvent, abort if cancelled
+                SpawnerSpawnEvent event = CraftEventFactory.callSpawnerSpawnEvent(entity, this.b().getX(), this.b().getY(), this.b().getZ());
+                if (!event.isCancelled()) {
+                    entity.world.addEntity(entity, CreatureSpawnEvent.SpawnReason.SPAWNER); // CraftBukkit
+                    // Spigot Start
+                    if ( entity.world.spigotConfig.nerfSpawnerMobs )
+                    {
+                        entity.fromMobSpawner = true;
+                    }
+                    // Spigot End
+                }
+                // CraftBukkit end
             }
 
             NBTTagCompound nbttagcompound1;
@@ -153,8 +194,13 @@
 
                     entity2.f(nbttagcompound2);
                     entity2.setPositionRotation(entity1.locX, entity1.locY, entity1.locZ, entity1.yaw, entity1.pitch);
+                    // CraftBukkit start - call SpawnerSpawnEvent, skip if cancelled
+                    SpawnerSpawnEvent event = CraftEventFactory.callSpawnerSpawnEvent(entity2, this.b().getX(), this.b().getY(), this.b().getZ());
+                    if (event.isCancelled()) {
+                        continue;
+                    }
                     if (entity.world != null && flag) {
-                        entity.world.addEntity(entity2);
+                        entity.world.addEntity(entity2, CreatureSpawnEvent.SpawnReason.SPAWNER); // CraftBukkit
                     }
 
                     entity1.mount(entity2);
@@ -166,8 +212,18 @@
             if (entity instanceof EntityInsentient) {
                 ((EntityInsentient) entity).prepare(entity.world.E(new BlockPosition(entity)), (GroupDataEntity) null);
             }
-
-            entity.world.addEntity(entity);
+            // Spigot start - call SpawnerSpawnEvent, abort if cancelled
+            SpawnerSpawnEvent event = CraftEventFactory.callSpawnerSpawnEvent(entity, this.b().getX(), this.b().getY(), this.b().getZ());
+            if (!event.isCancelled()) {
+                entity.world.addEntity(entity, CreatureSpawnEvent.SpawnReason.SPAWNER); // CraftBukkit
+                // Spigot Start
+                if ( entity.world.spigotConfig.nerfSpawnerMobs )
+                {
+                    entity.fromMobSpawner = true;
+                }
+                // Spigot End
+            }
+            // Spigot end
         }
 
         return entity;
@@ -183,7 +239,7 @@
         }
 
         if (this.mobs.size() > 0) {
-            this.a((net.minecraft.server.TileEntityMobSpawnerData) WeightedRandom.a(this.a().random, this.mobs));
+            this.a((MobSpawnerAbstract.a) WeightedRandom.a(this.a().random, this.mobs));
         }
 
         this.a(1);
@@ -197,14 +253,14 @@
             NBTTagList nbttaglist = nbttagcompound.getList("SpawnPotentials", 10);
 
             for (int i = 0; i < nbttaglist.size(); ++i) {
-                this.mobs.add(new net.minecraft.server.TileEntityMobSpawnerData(this, nbttaglist.get(i)));
+                this.mobs.add(new MobSpawnerAbstract.a(nbttaglist.get(i)));
             }
         }
 
         if (nbttagcompound.hasKeyOfType("SpawnData", 10)) {
-            this.a(new net.minecraft.server.TileEntityMobSpawnerData(this, nbttagcompound.getCompound("SpawnData"), this.mobName));
+            this.a(new MobSpawnerAbstract.a(nbttagcompound.getCompound("SpawnData"), this.mobName));
         } else {
-            this.a((net.minecraft.server.TileEntityMobSpawnerData) null);
+            this.a((MobSpawnerAbstract.a) null);
         }
 
         if (nbttagcompound.hasKeyOfType("MinSpawnDelay", 99)) {
@@ -241,7 +297,7 @@
             nbttagcompound.setShort("RequiredPlayerRange", (short) this.requiredPlayerRange);
             nbttagcompound.setShort("SpawnRange", (short) this.spawnRange);
             if (this.i() != null) {
-                nbttagcompound.set("SpawnData", net.minecraft.server.TileEntityMobSpawnerData.b(this.i()).clone());
+                nbttagcompound.set("SpawnData", this.i().c.clone());
             }
 
             if (this.i() != null || this.mobs.size() > 0) {
@@ -251,9 +307,9 @@
                     Iterator iterator = this.mobs.iterator();
 
                     while (iterator.hasNext()) {
-                        net.minecraft.server.TileEntityMobSpawnerData net_minecraft_server_tileentitymobspawnerdata = (net.minecraft.server.TileEntityMobSpawnerData) iterator.next();
+                        MobSpawnerAbstract.a mobspawnerabstract_a = (MobSpawnerAbstract.a) iterator.next();
 
-                        nbttaglist.add(net_minecraft_server_tileentitymobspawnerdata.a());
+                        nbttaglist.add(mobspawnerabstract_a.a());
                     }
                 } else {
                     nbttaglist.add(this.i().a());
@@ -274,12 +330,12 @@
         }
     }
 
-    private net.minecraft.server.TileEntityMobSpawnerData i() {
+    private MobSpawnerAbstract.a i() {
         return this.spawnData;
     }
 
-    public void a(net.minecraft.server.TileEntityMobSpawnerData net_minecraft_server_tileentitymobspawnerdata) {
-        this.spawnData = net_minecraft_server_tileentitymobspawnerdata;
+    public void a(MobSpawnerAbstract.a mobspawnerabstract_a) {
+        this.spawnData = mobspawnerabstract_a;
     }
 
     public abstract void a(int i);
@@ -287,4 +343,41 @@
     public abstract World a();
 
     public abstract BlockPosition b();
+
+    public class a extends WeightedRandom.WeightedRandomChoice {
+
+        private final NBTTagCompound c;
+        private final String d;
+
+        public a(NBTTagCompound nbttagcompound) {
+            this(nbttagcompound.getCompound("Properties"), nbttagcompound.getString("Type"), nbttagcompound.getInt("Weight"));
+        }
+
+        public a(NBTTagCompound nbttagcompound, String s) {
+            this(nbttagcompound, s, 1);
+        }
+
+        private a(NBTTagCompound nbttagcompound, String s, int i) {
+            super(i);
+            if (s.equals("Minecart")) {
+                if (nbttagcompound != null) {
+                    s = EntityMinecartAbstract.EnumMinecartType.a(nbttagcompound.getInt("Type")).b();
+                } else {
+                    s = "MinecartRideable";
+                }
+            }
+
+            this.c = nbttagcompound;
+            this.d = s;
+        }
+
+        public NBTTagCompound a() {
+            NBTTagCompound nbttagcompound = new NBTTagCompound();
+
+            nbttagcompound.set("Properties", this.c);
+            nbttagcompound.setString("Type", this.d);
+            nbttagcompound.setInt("Weight", this.a);
+            return nbttagcompound;
+        }
+    }
 }
