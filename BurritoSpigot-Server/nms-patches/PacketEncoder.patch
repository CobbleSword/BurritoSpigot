--- a/net/minecraft/server/PacketEncoder.java
+++ b/net/minecraft/server/PacketEncoder.java
@@ -1,5 +1,6 @@
 package net.minecraft.server;
 
+import club.nachospigot.commons.ExploitException;
 import io.netty.buffer.ByteBuf;
 import io.netty.channel.ChannelHandlerContext;
 import io.netty.handler.codec.MessageToByteEncoder;
@@ -27,18 +28,23 @@
         }
 
         if (integer == null) {
-            throw new IOException("Can't serialize unregistered packet");
+            throw new IOException("Can\'t serialize unregistered packet");
         } else {
             PacketDataSerializer packetdataserializer = new PacketDataSerializer(bytebuf);
 
-            packetdataserializer.b(integer);
+            packetdataserializer.b(integer.intValue());
 
             try {
                 if (packet instanceof PacketPlayOutNamedEntitySpawn) {
                     packet = packet;
                 }
 
-                packet.b(packetdataserializer);
+                try {
+                    packet.b(packetdataserializer);
+                } catch (ExploitException ex) {
+
+                    System.out.println("rarrr " + channelhandlercontext.channel().attr(NetworkManager.c).get());
+                }
             } catch (Throwable throwable) {
                 PacketEncoder.a.error(throwable);
             }
@@ -46,7 +52,8 @@
         }
     }
 
-    protected void encode(ChannelHandlerContext channelhandlercontext, Object object, ByteBuf bytebuf) throws Exception {
-        this.a(channelhandlercontext, (Packet) object, bytebuf);
+    @Override
+    protected void encode(ChannelHandlerContext channelHandlerContext, Packet packet, ByteBuf byteBuf) throws Exception {
+        this.a(channelHandlerContext, (Packet) packet, byteBuf);
     }
 }
