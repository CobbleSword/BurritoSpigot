--- a/net/minecraft/server/PathfinderGoalNearestAttackableTarget.java
+++ b/net/minecraft/server/PathfinderGoalNearestAttackableTarget.java
@@ -11,7 +11,7 @@
     protected final Class<T> a;
     private final int g;
     protected final PathfinderGoalNearestAttackableTarget.DistanceComparator b;
-    protected Predicate<? super T> c;
+    protected Predicate c;
     protected EntityLiving d;
 
     public PathfinderGoalNearestAttackableTarget(EntityCreature entitycreature, Class<T> oclass, boolean flag) {
@@ -28,7 +28,7 @@
         this.g = i;
         this.b = new PathfinderGoalNearestAttackableTarget.DistanceComparator(entitycreature);
         this.a(1);
-        this.c = new Predicate<T>() {
+        this.c = new Predicate() {
             public boolean a(T t0) {
                 if (predicate != null && !predicate.apply(t0)) {
                     return false;
@@ -60,7 +60,7 @@
             }
 
             public boolean apply(Object object) {
-                return this.a((EntityLiving) object);
+                return this.a((T) object); // CraftBukkit - fix decompile error
             }
         };
     }
@@ -70,7 +70,7 @@
             return false;
         } else {
             double d0 = this.f();
-            List list = this.e.world.a(this.a, this.e.getBoundingBox().grow(d0, 4.0D, d0), Predicates.and(this.c, IEntitySelector.d));
+            List list = this.e.world.a(this.a, this.e.getBoundingBox().grow(d0, 4.0D, d0), Predicates.and((Predicate) this.c, (Predicate) IEntitySelector.d)); // TacoSpigot - the eclipse compiler can't understand this, so make it generic
 
             Collections.sort(list, this.b);
             if (list.isEmpty()) {
@@ -83,7 +83,7 @@
     }
 
     public void c() {
-        this.e.setGoalTarget(this.d);
+        this.e.setGoalTarget(this.d, d instanceof EntityPlayer ? org.bukkit.event.entity.EntityTargetEvent.TargetReason.CLOSEST_PLAYER : org.bukkit.event.entity.EntityTargetEvent.TargetReason.CLOSEST_ENTITY, true); // Craftbukkit - reason
         super.c();
     }
 
@@ -102,7 +102,7 @@
             return d0 < d1 ? -1 : (d0 > d1 ? 1 : 0);
         }
 
-        public int compare(Object object, Object object1) {
+        public int compare(Entity object, Entity object1) { // CraftBukkit - fix decompile error
             return this.a((Entity) object, (Entity) object1);
         }
     }
