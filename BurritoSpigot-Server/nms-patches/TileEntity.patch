--- a/net/minecraft/server/TileEntity.java
+++ b/net/minecraft/server/TileEntity.java
@@ -6,8 +6,13 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
+import co.aikar.timings.SpigotTimings; // Spigot
+import co.aikar.timings.Timing; // Spigot
+import org.bukkit.inventory.InventoryHolder; // CraftBukkit
+
 public abstract class TileEntity {
 
+    public Timing tickTimer = SpigotTimings.getTileEntityTimings(this); // Spigot
     private static final Logger a = LogManager.getLogger();
     private static Map<String, Class<? extends TileEntity>> f = Maps.newHashMap();
     private static Map<Class<? extends TileEntity>, String> g = Maps.newHashMap();
@@ -143,7 +148,7 @@
     }
 
     public void a(CrashReportSystemDetails crashreportsystemdetails) {
-        crashreportsystemdetails.a("Name", new Callable<String>() {
+        crashreportsystemdetails.a("Name", new Callable() {
             public String a() throws Exception {
                 return (String) TileEntity.g.get(TileEntity.this.getClass()) + " // " + TileEntity.this.getClass().getCanonicalName();
             }
@@ -153,13 +158,18 @@
             }
         });
         if (this.world != null) {
-            CrashReportSystemDetails.a(crashreportsystemdetails, this.position, this.w(), this.u());
-            crashreportsystemdetails.a("Actual block type", new Callable<String>() {
+            // PaperSpigot start - Prevent tile entity and entity crashes
+            Block block = this.w();
+            if (block != null) {
+                CrashReportSystemDetails.a(crashreportsystemdetails, this.position, this.w(), this.u());
+            }
+            // PaperSpigot end
+            crashreportsystemdetails.a("Actual block type", new Callable() {
                 public String a() throws Exception {
                     int i = Block.getId(TileEntity.this.world.getType(TileEntity.this.position).getBlock());
 
                     try {
-                        return String.format("ID #%d (%s // %s)", i, Block.getById(i).a(), Block.getById(i).getClass().getCanonicalName());
+                        return String.format("ID #%d (%s // %s)", new Object[] { Integer.valueOf(i), Block.getById(i).a(), Block.getById(i).getClass().getCanonicalName()});
                     } catch (Throwable throwable) {
                         return "ID #" + i;
                     }
@@ -169,7 +179,7 @@
                     return this.a();
                 }
             });
-            crashreportsystemdetails.a("Actual block data value", new Callable<String>() {
+            crashreportsystemdetails.a("Actual block data value", new Callable() {
                 public String a() throws Exception {
                     IBlockData iblockdata = TileEntity.this.world.getType(TileEntity.this.position);
                     int i = iblockdata.getBlock().toLegacyData(iblockdata);
@@ -177,9 +187,9 @@
                     if (i < 0) {
                         return "Unknown? (Got " + i + ")";
                     } else {
-                        String s = String.format("%4s", Integer.toBinaryString(i)).replace(" ", "0");
+                        String s = String.format("%4s", new Object[] { Integer.toBinaryString(i)}).replace(" ", "0");
 
-                        return String.format("%1$d / 0x%1$X / 0b%2$s", i, s);
+                        return String.format("%1$d / 0x%1$X / 0b%2$s", new Object[] { Integer.valueOf(i), s});
                     }
                 }
 
@@ -221,4 +231,20 @@
         a(TileEntityFlowerPot.class, "FlowerPot");
         a(TileEntityBanner.class, "Banner");
     }
+
+    // CraftBukkit start - add method
+    public InventoryHolder getOwner() {
+        if (world == null) return null;
+        // Spigot start
+        org.bukkit.block.Block block = world.getWorld().getBlockAt(position.getX(), position.getY(), position.getZ());
+        if (block == null) {
+            org.bukkit.Bukkit.getLogger().log(java.util.logging.Level.WARNING, "No block for owner at %s %d %d %d", new Object[]{world.getWorld(), position.getX(), position.getY(), position.getZ()});
+            return null;
+        }
+        // Spigot end
+        org.bukkit.block.BlockState state = block.getState();
+        if (state instanceof InventoryHolder) return (InventoryHolder) state;
+        return null;
+    }
+    // CraftBukkit end
 }
