--- ChunkProviderServer.java
+++ ChunkProviderServer.java
@@ -49,26 +67,60 @@
     }
 
     public boolean isChunkLoaded(int i, int j) {
-        return this.chunks.contains(ChunkCoordIntPair.a(i, j));
+        return this.chunks.containsKey(LongHash.toLong(i, j)); // CraftBukkit
     }
 
-    public List<Chunk> a() {
-        return this.chunkList;
+    // CraftBukkit start - Change return type to Collection and return the values of our chunk map
+    public java.util.Collection a() {
+        // return this.chunkList;
+        return this.chunks.values();
+        // CraftBukkit end
     }
 
     public void queueUnload(int i, int j) {
+        // PaperSpigot start - Asynchronous lighting updates
+        Chunk chunk = chunks.get(LongHash.toLong(i, j));
+        if (chunk != null && chunk.world.paperSpigotConfig.useAsyncLighting && (chunk.pendingLightUpdates.get() > 0 || chunk.world.getTime() - chunk.lightUpdateTime < 20)) {
+            return;
+        }
+        // PaperSpigot end
+        // PaperSpigot start - Don't unload chunk if it contains an entity that loads chunks
+        if (chunk != null) {
+            for (List<Entity> entities : chunk.entitySlices) {
+                for (Entity entity : entities) {
+                    if (entity.loadChunks) {
+                        return;
+                    }
+                }
+            }
+        }
+        // PaperSpigot end
         if (this.world.worldProvider.e()) {
-            if (!this.world.shouldStayLoaded(i, j)) {
-                this.unloadQueue.add(ChunkCoordIntPair.a(i, j));
+            if (!this.world.c(i, j)) {
+                // CraftBukkit start
+                this.unloadQueue.add(LongHash.toLong(i, j));  // TacoSpigot - directly invoke LongHash
+
+                Chunk c = chunks.get(LongHash.toLong(i, j));
+                if (c != null) {
+                    c.mustSave = true;
+                }
+                // CraftBukkit end
             }
         } else {
-            this.unloadQueue.add(ChunkCoordIntPair.a(i, j));
+            // CraftBukkit start
+            this.unloadQueue.add(LongHash.toLong(i, j)); // TacoSpigot - directly invoke LongHash
+
+            Chunk c = chunks.get(LongHash.toLong(i, j));
+            if (c != null) {
+                c.mustSave = true;
+            }
+            // CraftBukkit end
         }
 
     }
 
     public void b() {
-        Iterator iterator = this.chunkList.iterator();
+        Iterator iterator = this.chunks.values().iterator();
 
         while (iterator.hasNext()) {
             Chunk chunk = (Chunk) iterator.next();
