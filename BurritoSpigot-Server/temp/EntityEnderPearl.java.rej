--- EntityEnderPearl.java
+++ EntityEnderPearl.java
@@ -32,30 +40,50 @@
             movingobjectposition.entity.damageEntity(DamageSource.projectile(this, entityliving), 0.0F);
         }
 
+        // PaperSpigot start - Remove entities in unloaded chunks
+        if (this.inUnloadedChunk && world.paperSpigotConfig.removeUnloadedEnderPearls) {
+            this.die();
+        }
+        // PaperSpigot end
+
         for (int i = 0; i < 32; ++i) {
-            this.world.addParticle(EnumParticle.PORTAL, this.locX, this.locY + this.random.nextDouble() * 2.0D, this.locZ, this.random.nextGaussian(), 0.0D, this.random.nextGaussian());
+            this.world.addParticle(EnumParticle.PORTAL, this.locX, this.locY + this.random.nextDouble() * 2.0D, this.locZ, this.random.nextGaussian(), 0.0D, this.random.nextGaussian(), new int[0]);
         }
 
         if (!this.world.isClientSide) {
             if (entityliving instanceof EntityPlayer) {
                 EntityPlayer entityplayer = (EntityPlayer) entityliving;
 
-                if (entityplayer.playerConnection.getNetworkManager().g() && entityplayer.world == this.world && !entityplayer.isSleeping()) {
-                    if (this.random.nextFloat() < 0.05F && this.world.getGameRules().getBoolean("doMobSpawning")) {
-                        EntityEndermite entityendermite = new EntityEndermite(this.world);
-
-                        entityendermite.a(true);
-                        entityendermite.setPositionRotation(entityliving.locX, entityliving.locY, entityliving.locZ, entityliving.yaw, entityliving.pitch);
-                        this.world.addEntity(entityendermite);
+                if (entityplayer.playerConnection.a().g() && entityplayer.world == this.world && !entityplayer.isSleeping()) {
+                    // CraftBukkit start - Fire PlayerTeleportEvent
+                    org.bukkit.craftbukkit.entity.CraftPlayer player = entityplayer.getBukkitEntity();
+                    org.bukkit.Location location = getBukkitEntity().getLocation();
+                    location.setPitch(player.getLocation().getPitch());
+                    location.setYaw(player.getLocation().getYaw());
+
+                    PlayerTeleportEvent teleEvent = new PlayerTeleportEvent(player, player.getLocation(), location, PlayerTeleportEvent.TeleportCause.ENDER_PEARL);
+                    Bukkit.getPluginManager().callEvent(teleEvent);
+
+                    if (!teleEvent.isCancelled() && !entityplayer.playerConnection.isDisconnected()) {
+                        if (this.random.nextFloat() < 0.05F && this.world.getGameRules().getBoolean("doMobSpawning")) {
+                            EntityEndermite entityendermite = new EntityEndermite(this.world);
+
+                            entityendermite.a(true);
+                            entityendermite.setPositionRotation(entityliving.locX, entityliving.locY, entityliving.locZ, entityliving.yaw, entityliving.pitch);
+                            this.world.addEntity(entityendermite);
+                        }
+
+                        if (entityliving.au()) {
+                            entityliving.mount((Entity) null);
+                        }
+
+                        entityplayer.playerConnection.teleport(teleEvent.getTo());
+                        entityliving.fallDistance = 0.0F;
+                        CraftEventFactory.entityDamage = this;
+                        entityliving.damageEntity(DamageSource.FALL, 5.0F);
+                        CraftEventFactory.entityDamage = null;
                     }
-
-                    if (entityliving.au()) {
-                        entityliving.mount((Entity) null);
-                    }
-
-                    entityliving.enderTeleportTo(this.locX, this.locY, this.locZ);
-                    entityliving.fallDistance = 0.0F;
-                    entityliving.damageEntity(DamageSource.FALL, 5.0F);
+                    // CraftBukkit end
                 }
             } else if (entityliving != null) {
                 entityliving.enderTeleportTo(this.locX, this.locY, this.locZ);
